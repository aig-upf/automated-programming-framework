INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/translate/translate.py domain.pddl ins.pddl --sas-file output.sas
Parsing...
Parsing: [0.060s CPU, 0.057s wall-clock]
Normalizing task... [0.000s CPU, 0.004s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.003s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.030s CPU, 0.034s wall-clock]
Preparing model... [0.020s CPU, 0.017s wall-clock]
Generated 1597 rules.
Computing model... [0.020s CPU, 0.016s wall-clock]
675 relevant atoms
1250 auxiliary atoms
1925 final queue length
3448 total queue pushes
Completing instantiation... [0.020s CPU, 0.023s wall-clock]
Instantiating: [0.100s CPU, 0.097s wall-clock]
Computing fact groups...
Finding invariants...
119 initial candidates
Finding invariants: [0.180s CPU, 0.186s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
147 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.190s CPU, 0.189s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.030s CPU, 0.035s wall-clock]
333 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
8 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
150 of 151 variables necessary.
59 of 67 mutex groups necessary.
488 of 488 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 150
Translator derived variables: 0
Translator facts: 306
Translator goal facts: 1
Translator mutex groups: 59
Translator total mutex groups size: 118
Translator operators: 488
Translator axioms: 0
Translator task size: 5165
Translator peak memory: 46476 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.410s CPU, 0.409s wall-clock]

translate exit code: 0
INFO     Running search (release32).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
reading input... [t=1.9453e-05s]
done reading input! [t=0.00445547s]
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00310814s
Discovered 11 landmarks, of which 0 are disjunctive and 0 are conjunctive 
23 edges
Simplifying 1780 unary operators... done! [1106 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done! [t=0.0100968s]
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000143773s
Variables: 150
FactPairs: 306
Bytes per state: 20
Conducting lazy best first search, (real) bound = 2147483647
5 initial landmarks, 1 goal landmarks
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
New best heuristic value for ff(transform = adapt_costs(one)): 10
[g=0, 1 evaluated, 0 expanded, t=0.0102025s, 4968 KB]
Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
Initial heuristic value for ff(transform = adapt_costs(one)): 10
New best heuristic value for ff(transform = adapt_costs(one)): 6
[g=1, 2 evaluated, 1 expanded, t=0.0102816s, 4968 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 5
New best heuristic value for ff(transform = adapt_costs(one)): 5
[g=2, 3 evaluated, 2 expanded, t=0.010333s, 4968 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 4
[g=7, 5063 evaluated, 3360 expanded, t=0.11904s, 5884 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 3
[g=8, 5064 evaluated, 3361 expanded, t=0.119089s, 5884 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 3
[g=9, 5065 evaluated, 3362 expanded, t=0.11913s, 5884 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
New best heuristic value for ff(transform = adapt_costs(one)): 2
[g=14, 5070 evaluated, 3367 expanded, t=0.119236s, 5884 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
New best heuristic value for ff(transform = adapt_costs(one)): 1
[g=20, 5076 evaluated, 3373 expanded, t=0.119354s, 5884 KB]
Solution found!
Actual search time: 0.109227s [t=0.119387s]
program-assign-a-to-c-0 row-0 (1001)
check-assign-a-to-c-0-0 row-0 (0)
execute-assign-a-to-c-0-0 row-0 (1)
program-dec-b-1 row-0 (1001)
check-dec-b-0-1 row-0 (0)
execute-dec-b-0-1 row-0 (1)
program-end-2 row-0 (1)
check-main-end-0-2 row-0 (0)
repeat-end-main-0-2 row-0 (0)
check-assign-a-to-c-0-0 row-0 (0)
execute-assign-a-to-c-0-0 row-0 (1)
check-dec-b-0-1 row-0 (0)
execute-dec-b-0-1 row-0 (1)
check-main-end-1-2 row-0 (0)
skip-1  (0)
check-assign-a-to-c-0-0 row-0 (0)
execute-assign-a-to-c-0-0 row-0 (1)
check-dec-b-0-1 row-0 (0)
execute-dec-b-0-1 row-0 (1)
check-main-end-2-2 row-0 (0)
skip-2  (0)
Plan length: 21 step(s).
Plan cost: 2009
Expanded 3374 state(s).
Reopened 0 state(s).
Evaluated 5077 state(s).
Evaluations: 8452
Generated 47933 state(s).
Dead ends: 1702 state(s).
Number of registered states: 5077
Int hash set load factor: 5077/8192 = 0.619751
Int hash set resizes: 13
Search time: 0.109245s
Total time: 0.119389s
Solution found.
Peak memory: 5884 KB

search exit code: 0
