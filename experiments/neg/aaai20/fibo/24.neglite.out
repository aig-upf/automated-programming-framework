INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/translate/translate.py domain.pddl ins.pddl --sas-file output.sas
Parsing...
Parsing: [0.060s CPU, 0.064s wall-clock]
Normalizing task... [0.010s CPU, 0.005s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.004s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.040s CPU, 0.038s wall-clock]
Preparing model... [0.020s CPU, 0.019s wall-clock]
Generated 1778 rules.
Computing model... [0.020s CPU, 0.021s wall-clock]
825 relevant atoms
1660 auxiliary atoms
2485 final queue length
5712 total queue pushes
Completing instantiation... [0.040s CPU, 0.044s wall-clock]
Instantiating: [0.130s CPU, 0.128s wall-clock]
Computing fact groups...
Finding invariants...
121 initial candidates
Finding invariants: [0.270s CPU, 0.277s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
180 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.280s CPU, 0.281s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.070s CPU, 0.077s wall-clock]
456 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
8 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.022s wall-clock]
Reordering and filtering variables...
183 of 184 variables necessary.
59 of 69 mutex groups necessary.
600 of 600 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.015s wall-clock]
Translator variables: 183
Translator derived variables: 0
Translator facts: 374
Translator goal facts: 1
Translator mutex groups: 59
Translator total mutex groups size: 118
Translator operators: 600
Translator axioms: 0
Translator task size: 13138
Translator peak memory: 50296 KB
Writing output... [0.010s CPU, 0.012s wall-clock]
Done! [0.600s CPU, 0.605s wall-clock]

translate exit code: 0
INFO     Running search (release32).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
reading input... [t=1.9507e-05s]
done reading input! [t=0.00947472s]
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00661884s
Discovered 13 landmarks, of which 0 are disjunctive and 0 are conjunctive 
40 edges
Simplifying 3552 unary operators... done! [2658 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done! [t=0.0201378s]
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000168529s
Variables: 183
FactPairs: 374
Bytes per state: 24
Conducting lazy best first search, (real) bound = 2147483647
5 initial landmarks, 1 goal landmarks
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
New best heuristic value for ff(transform = adapt_costs(one)): 12
[g=0, 1 evaluated, 0 expanded, t=0.0202718s, 5468 KB]
Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
Initial heuristic value for ff(transform = adapt_costs(one)): 12
New best heuristic value for ff(transform = adapt_costs(one)): 8
[g=1, 2 evaluated, 1 expanded, t=0.0203819s, 5468 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
New best heuristic value for ff(transform = adapt_costs(one)): 7
[g=2, 3 evaluated, 2 expanded, t=0.0204594s, 5468 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 6
[g=7, 5830 evaluated, 3743 expanded, t=0.258469s, 6528 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 5
[g=8, 5832 evaluated, 3745 expanded, t=0.258591s, 6528 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 5
[g=9, 5833 evaluated, 3746 expanded, t=0.258652s, 6528 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 4
New best heuristic value for ff(transform = adapt_costs(one)): 4
[g=14, 5838 evaluated, 3751 expanded, t=0.258863s, 6528 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 3
New best heuristic value for ff(transform = adapt_costs(one)): 3
[g=20, 5844 evaluated, 3757 expanded, t=0.259102s, 6528 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
New best heuristic value for ff(transform = adapt_costs(one)): 2
[g=26, 5850 evaluated, 3763 expanded, t=0.259334s, 6528 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
New best heuristic value for ff(transform = adapt_costs(one)): 1
[g=32, 5856 evaluated, 3769 expanded, t=0.259536s, 6528 KB]
Solution found!
Actual search time: 0.239373s [t=0.259575s]
program-assign-a-to-c-0 row-0 (1001)
check-assign-a-to-c-0-0 row-0 (0)
execute-assign-a-to-c-0-0 row-0 (1)
program-dec-b-1 row-0 (1001)
check-dec-b-0-1 row-0 (0)
execute-dec-b-0-1 row-0 (1)
program-end-2 row-0 (1)
check-main-end-0-2 row-0 (0)
repeat-end-main-0-2 row-0 (0)
check-assign-a-to-c-0-0 row-0 (0)
execute-assign-a-to-c-0-0 row-0 (1)
check-dec-b-0-1 row-0 (0)
execute-dec-b-0-1 row-0 (1)
check-main-end-1-2 row-0 (0)
skip-1  (0)
check-assign-a-to-c-0-0 row-0 (0)
execute-assign-a-to-c-0-0 row-0 (1)
check-dec-b-0-1 row-0 (0)
execute-dec-b-0-1 row-0 (1)
check-main-end-2-2 row-0 (0)
skip-2  (0)
check-assign-a-to-c-0-0 row-0 (0)
execute-assign-a-to-c-0-0 row-0 (1)
check-dec-b-0-1 row-0 (0)
execute-dec-b-0-1 row-0 (1)
check-main-end-3-2 row-0 (0)
skip-3  (0)
check-assign-a-to-c-0-0 row-0 (0)
execute-assign-a-to-c-0-0 row-0 (1)
check-dec-b-0-1 row-0 (0)
execute-dec-b-0-1 row-0 (1)
check-main-end-4-2 row-0 (0)
skip-4  (0)
Plan length: 33 step(s).
Plan cost: 2013
Expanded 3770 state(s).
Reopened 0 state(s).
Evaluated 5857 state(s).
Evaluations: 9628
Generated 67783 state(s).
Dead ends: 2086 state(s).
Number of registered states: 5857
Int hash set load factor: 5857/8192 = 0.714966
Int hash set resizes: 13
Search time: 0.239384s
Total time: 0.259577s
Solution found.
Peak memory: 6528 KB

search exit code: 0
