INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/translate/translate.py domain.pddl ins.pddl --sas-file output.sas
Parsing...
Parsing: [0.080s CPU, 0.077s wall-clock]
Normalizing task... [0.000s CPU, 0.005s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.004s wall-clock]
Normalizing Datalog program...
Unbound effect variables: Adding @object predicate.
Trivial rules: Converted to facts.
Normalizing Datalog program: [0.030s CPU, 0.039s wall-clock]
Preparing model... [0.030s CPU, 0.018s wall-clock]
Generated 1804 rules.
Computing model... [0.020s CPU, 0.024s wall-clock]
863 relevant atoms
1333 auxiliary atoms
2196 final queue length
3403 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.120s CPU, 0.111s wall-clock]
Computing fact groups...
Finding invariants...
173 initial candidates
Finding invariants: [23.510s CPU, 23.513s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
262 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [23.510s CPU, 23.518s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.003s wall-clock]
Translating task: [0.040s CPU, 0.038s wall-clock]
804 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
220 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
170 of 170 variables necessary.
54 of 63 mutex groups necessary.
457 of 457 operators necessary.
13 of 13 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 170
Translator derived variables: 13
Translator facts: 392
Translator goal facts: 1
Translator mutex groups: 54
Translator total mutex groups size: 138
Translator operators: 457
Translator axioms: 13
Translator task size: 5372
Translator peak memory: 205356 KB
Writing output... [0.000s CPU, 0.006s wall-clock]
Done! [23.780s CPU, 23.782s wall-clock]

translate exit code: 0
INFO     Running search (release32).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
reading input... [t=2.231e-05s]
done reading input! [t=0.00477002s]
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00357887s
Discovered 14 landmarks, of which 0 are disjunctive and 0 are conjunctive 
35 edges
Simplifying 2203 unary operators... done! [1524 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done! [t=0.0112003s]
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000135006s
Variables: 170
FactPairs: 392
Bytes per state: 28
Conducting lazy best first search, (real) bound = 2147483647
7 initial landmarks, 1 goal landmarks
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
New best heuristic value for ff(transform = adapt_costs(one)): 11
[g=0, 1 evaluated, 0 expanded, t=0.0113211s, 5012 KB]
Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
Initial heuristic value for ff(transform = adapt_costs(one)): 11
New best heuristic value for ff(transform = adapt_costs(one)): 9
[g=1, 2 evaluated, 1 expanded, t=0.0114203s, 5012 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 8
[g=2, 3 evaluated, 2 expanded, t=0.0114885s, 5012 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 7
[g=3, 4 evaluated, 3 expanded, t=0.0115581s, 5012 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
New best heuristic value for ff(transform = adapt_costs(one)): 6
[g=2, 9 evaluated, 8 expanded, t=0.0118299s, 5012 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 5
[g=4, 1058 evaluated, 1057 expanded, t=0.0551533s, 5104 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 4
[g=5, 1059 evaluated, 1058 expanded, t=0.0552167s, 5104 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 4
[g=6, 1060 evaluated, 1059 expanded, t=0.0552694s, 5104 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 3
New best heuristic value for ff(transform = adapt_costs(one)): 3
[g=9, 1063 evaluated, 1062 expanded, t=0.0553874s, 5104 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
New best heuristic value for ff(transform = adapt_costs(one)): 2
[g=13, 1067 evaluated, 1066 expanded, t=0.0555238s, 5104 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
New best heuristic value for ff(transform = adapt_costs(one)): 1
[g=17, 1071 evaluated, 1070 expanded, t=0.0556836s, 5104 KB]
Solution found!
Actual search time: 0.0444571s [t=0.0557201s]
program-inc-0 row-0 (1001)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
program-end-1 row-0 (1)
check-main-end-0-1 row-0 (0)
repeat-end-main-0-1 row-0 (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-main-end-1-1 row-0 (0)
skip-1  (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-main-end-2-1 row-0 (0)
skip-2  (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-main-end-3-1 row-0 (0)
skip-3  (0)
Plan length: 18 step(s).
Plan cost: 1006
Expanded 1071 state(s).
Reopened 0 state(s).
Evaluated 1072 state(s).
Evaluations: 2144
Generated 12136 state(s).
Dead ends: 0 state(s).
Number of registered states: 1072
Int hash set load factor: 1072/2048 = 0.523438
Int hash set resizes: 11
Search time: 0.0444687s
Total time: 0.0557225s
Solution found.
Peak memory: 5104 KB

search exit code: 0
