INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/translate/translate.py domain.pddl ins.pddl --sas-file output.sas
Parsing...
Parsing: [0.080s CPU, 0.086s wall-clock]
Normalizing task... [0.010s CPU, 0.006s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.004s wall-clock]
Normalizing Datalog program...
Unbound effect variables: Adding @object predicate.
Trivial rules: Converted to facts.
Normalizing Datalog program: [0.040s CPU, 0.041s wall-clock]
Preparing model... [0.020s CPU, 0.020s wall-clock]
Generated 1942 rules.
Computing model... [0.030s CPU, 0.033s wall-clock]
1466 relevant atoms
1860 auxiliary atoms
3326 final queue length
6395 total queue pushes
Completing instantiation... [0.050s CPU, 0.045s wall-clock]
Instantiating: [0.150s CPU, 0.146s wall-clock]
Computing fact groups...
Finding invariants...
174 initial candidates
Finding invariants: [28.350s CPU, 28.347s wall-clock]
Checking invariant weight... [0.000s CPU, 0.001s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
419 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.002s wall-clock]
Computing fact groups: [28.360s CPU, 28.355s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.010s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.005s wall-clock]
Translating task: [0.090s CPU, 0.085s wall-clock]
1753 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
331 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.026s wall-clock]
Reordering and filtering variables...
271 of 271 variables necessary.
54 of 63 mutex groups necessary.
763 of 763 operators necessary.
13 of 13 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.021s wall-clock]
Translator variables: 271
Translator derived variables: 13
Translator facts: 655
Translator goal facts: 1
Translator mutex groups: 54
Translator total mutex groups size: 178
Translator operators: 763
Translator axioms: 13
Translator task size: 11608
Translator peak memory: 207348 KB
Writing output... [0.010s CPU, 0.012s wall-clock]
Done! [28.750s CPU, 28.741s wall-clock]

translate exit code: 0
INFO     Running search (release32).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
reading input... [t=2.0942e-05s]
done reading input! [t=0.00994197s]
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00902246s
Discovered 16 landmarks, of which 0 are disjunctive and 0 are conjunctive 
44 edges
Simplifying 4466 unary operators... done! [3207 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done! [t=0.0244145s]
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000181636s
Variables: 271
FactPairs: 655
Bytes per state: 40
Conducting lazy best first search, (real) bound = 2147483647
8 initial landmarks, 1 goal landmarks
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
New best heuristic value for ff(transform = adapt_costs(one)): 12
[g=0, 1 evaluated, 0 expanded, t=0.0245692s, 5780 KB]
Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
Initial heuristic value for ff(transform = adapt_costs(one)): 12
New best heuristic value for ff(transform = adapt_costs(one)): 10
[g=1, 2 evaluated, 1 expanded, t=0.0247189s, 5780 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 9
[g=2, 3 evaluated, 2 expanded, t=0.0248211s, 5780 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 8
[g=3, 4 evaluated, 3 expanded, t=0.0249276s, 5780 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
New best heuristic value for ff(transform = adapt_costs(one)): 7
[g=2, 9 evaluated, 8 expanded, t=0.0253371s, 5780 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 6
[g=16, 1837 evaluated, 1836 expanded, t=0.159809s, 5912 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 5
[g=17, 1838 evaluated, 1837 expanded, t=0.159904s, 5912 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 5
[g=18, 1839 evaluated, 1838 expanded, t=0.159983s, 5912 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 4
New best heuristic value for ff(transform = adapt_costs(one)): 4
[g=29, 1850 evaluated, 1849 expanded, t=0.16068s, 5912 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 3
New best heuristic value for ff(transform = adapt_costs(one)): 3
[g=41, 1862 evaluated, 1861 expanded, t=0.161421s, 5912 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
New best heuristic value for ff(transform = adapt_costs(one)): 2
[g=53, 1874 evaluated, 1873 expanded, t=0.162103s, 5912 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
New best heuristic value for ff(transform = adapt_costs(one)): 1
[g=65, 1886 evaluated, 1885 expanded, t=0.162676s, 5912 KB]
Solution found!
Actual search time: 0.138238s [t=0.162719s]
program-inc-0 row-0 (1001)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
program-paint-1 row-0 (1001)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
program-paint-2 row-0 (1001)
check-paint-0-2 row-0 (0)
execute-paint-0-2 row-0 (1)
program-paint-3 row-0 (1001)
check-paint-0-3 row-0 (0)
execute-paint-0-3 row-0 (1)
program-inc-4 row-0 (1001)
check-inc-0-4 row-0 (0)
execute-inc-0-4 row-0 (1)
program-end-5 row-0 (1)
check-main-end-0-5 row-0 (0)
repeat-end-main-0-5 row-0 (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-paint-0-2 row-0 (0)
execute-paint-0-2 row-0 (1)
check-paint-0-3 row-0 (0)
execute-paint-0-3 row-0 (1)
check-inc-0-4 row-0 (0)
execute-inc-0-4 row-0 (1)
check-main-end-1-5 row-0 (0)
skip-1  (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-paint-0-2 row-0 (0)
execute-paint-0-2 row-0 (1)
check-paint-0-3 row-0 (0)
execute-paint-0-3 row-0 (1)
check-inc-0-4 row-0 (0)
execute-inc-0-4 row-0 (1)
check-main-end-2-5 row-0 (0)
skip-2  (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-paint-0-2 row-0 (0)
execute-paint-0-2 row-0 (1)
check-paint-0-3 row-0 (0)
execute-paint-0-3 row-0 (1)
check-inc-0-4 row-0 (0)
execute-inc-0-4 row-0 (1)
check-main-end-3-5 row-0 (0)
skip-3  (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-paint-0-2 row-0 (0)
execute-paint-0-2 row-0 (1)
check-paint-0-3 row-0 (0)
execute-paint-0-3 row-0 (1)
check-inc-0-4 row-0 (0)
execute-inc-0-4 row-0 (1)
check-main-end-4-5 row-0 (0)
skip-4  (0)
Plan length: 66 step(s).
Plan cost: 5031
Expanded 1886 state(s).
Reopened 0 state(s).
Evaluated 1887 state(s).
Evaluations: 3774
Generated 35905 state(s).
Dead ends: 0 state(s).
Number of registered states: 1887
Int hash set load factor: 1887/2048 = 0.921387
Int hash set resizes: 11
Search time: 0.13825s
Total time: 0.162721s
Solution found.
Peak memory: 5912 KB

search exit code: 0
