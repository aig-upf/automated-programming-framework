INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/translate/translate.py domain.pddl ins.pddl --sas-file output.sas
Parsing...
Parsing: [0.080s CPU, 0.081s wall-clock]
Normalizing task... [0.000s CPU, 0.006s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.005s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.040s CPU, 0.045s wall-clock]
Preparing model... [0.030s CPU, 0.022s wall-clock]
Generated 1963 rules.
Computing model... [0.030s CPU, 0.031s wall-clock]
838 relevant atoms
1430 auxiliary atoms
2268 final queue length
4297 total queue pushes
Completing instantiation... [0.030s CPU, 0.030s wall-clock]
Instantiating: [0.140s CPU, 0.137s wall-clock]
Computing fact groups...
Finding invariants...
122 initial candidates
Finding invariants: [4.630s CPU, 4.623s wall-clock]
Checking invariant weight... [0.000s CPU, 0.001s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
85 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [4.630s CPU, 4.626s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.046s wall-clock]
534 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
8 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.016s wall-clock]
Reordering and filtering variables...
96 of 99 variables necessary.
54 of 64 mutex groups necessary.
620 of 620 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 96
Translator derived variables: 0
Translator facts: 275
Translator goal facts: 1
Translator mutex groups: 54
Translator total mutex groups size: 158
Translator operators: 620
Translator axioms: 0
Translator task size: 5344
Translator peak memory: 171528 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [4.930s CPU, 4.930s wall-clock]

translate exit code: 0
INFO     Running search (release32).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
reading input... [t=1.874e-05s]
done reading input! [t=0.00481225s]
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00392963s
Discovered 13 landmarks, of which 0 are disjunctive and 0 are conjunctive 
38 edges
Simplifying 2249 unary operators... done! [1280 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done! [t=0.0128805s]
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000164625s
Variables: 96
FactPairs: 275
Bytes per state: 16
Conducting lazy best first search, (real) bound = 2147483647
5 initial landmarks, 1 goal landmarks
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
New best heuristic value for ff(transform = adapt_costs(one)): 12
[g=0, 1 evaluated, 0 expanded, t=0.0129942s, 5020 KB]
Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
Initial heuristic value for ff(transform = adapt_costs(one)): 12
New best heuristic value for ff(transform = adapt_costs(one)): 10
[g=1, 2 evaluated, 1 expanded, t=0.0130866s, 5020 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 9
[g=2, 3 evaluated, 2 expanded, t=0.013138s, 5020 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 8
[g=1, 7 evaluated, 5 expanded, t=0.0132809s, 5020 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
New best heuristic value for ff(transform = adapt_costs(one)): 7
[g=2, 8 evaluated, 6 expanded, t=0.0133318s, 5020 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 6
[g=4, 830 evaluated, 594 expanded, t=0.0350216s, 5020 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 5
[g=5, 831 evaluated, 595 expanded, t=0.0350999s, 5020 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
[g=7, 833 evaluated, 597 expanded, t=0.0351646s, 5020 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 4
[g=33, 258873 evaluated, 192759 expanded, t=5.26878s, 30632 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 5
[g=35, 258875 evaluated, 192761 expanded, t=5.26887s, 30632 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 3
[g=63, 286176 evaluated, 214070 expanded, t=5.82668s, 32576 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 3
[g=64, 286177 evaluated, 214071 expanded, t=5.82675s, 32576 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
New best heuristic value for ff(transform = adapt_costs(one)): 2
[g=89, 286202 evaluated, 214096 expanded, t=5.82723s, 32708 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
New best heuristic value for ff(transform = adapt_costs(one)): 1
[g=95, 286208 evaluated, 214102 expanded, t=5.82736s, 32708 KB]
Solution found!
Actual search time: 5.81445s [t=5.8274s]
program-inc-0 row-0 (1001)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
program-goto-not-last-cell-1-5 row-0 (1001)
eval-cond-not-last-cell-0-1 row-0 (1)
do-goto-0-1-5 row-0 (1)
program-end-5 row-0 (1)
check-main-end-0-5 row-0 (0)
repeat-end-main-0-5 row-0 (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
eval-cond-not-last-cell-0-1 row-0 (1)
dont-goto-0-1-5 row-0 (1)
program-paint-2 row-0 (1001)
check-paint-0-2 row-0 (0)
execute-paint-0-2 row-0 (1)
program-inc-3 row-0 (1001)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
program-goto-at-4-0 i3 row-0 (1001)
eval-cond-at-0-4 i3 row-0 (1)
do-goto-0-4-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
eval-cond-not-last-cell-0-1 row-0 (1)
dont-goto-0-1-5 row-0 (1)
check-paint-0-2 row-0 (0)
execute-paint-0-2 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
eval-cond-at-0-4 i3 row-0 (1)
do-goto-0-4-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
eval-cond-not-last-cell-0-1 row-0 (1)
do-goto-0-1-5 row-0 (1)
check-main-end-1-5 row-0 (0)
repeat-end-main-1-5 row-0 (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
eval-cond-not-last-cell-0-1 row-0 (1)
dont-goto-0-1-5 row-0 (1)
check-paint-0-2 row-0 (0)
execute-paint-0-2 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
eval-cond-at-0-4 i3 row-0 (1)
do-goto-0-4-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
eval-cond-not-last-cell-0-1 row-0 (1)
dont-goto-0-1-5 row-0 (1)
check-paint-0-2 row-0 (0)
execute-paint-0-2 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
eval-cond-at-0-4 i3 row-0 (1)
do-goto-0-4-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
eval-cond-not-last-cell-0-1 row-0 (1)
do-goto-0-1-5 row-0 (1)
check-main-end-2-5 row-0 (0)
repeat-end-main-2-5 row-0 (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
eval-cond-not-last-cell-0-1 row-0 (1)
dont-goto-0-1-5 row-0 (1)
check-paint-0-2 row-0 (0)
execute-paint-0-2 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
eval-cond-at-0-4 i3 row-0 (1)
do-goto-0-4-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
eval-cond-not-last-cell-0-1 row-0 (1)
dont-goto-0-1-5 row-0 (1)
check-paint-0-2 row-0 (0)
execute-paint-0-2 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
eval-cond-at-0-4 i3 row-0 (1)
do-goto-0-4-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
eval-cond-not-last-cell-0-1 row-0 (1)
do-goto-0-1-5 row-0 (1)
check-main-end-3-5 row-0 (0)
skip-3  (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
eval-cond-not-last-cell-0-1 row-0 (1)
do-goto-0-1-5 row-0 (1)
check-main-end-4-5 row-0 (0)
skip-4  (0)
Plan length: 96 step(s).
Plan cost: 5063
Expanded 214103 state(s).
Reopened 0 state(s).
Evaluated 286209 state(s).
Evaluations: 500313
Generated 758977 state(s).
Dead ends: 72105 state(s).
Number of registered states: 286209
Int hash set load factor: 286209/524288 = 0.5459
Int hash set resizes: 19
Search time: 5.81447s
Total time: 5.8274s
Solution found.
Peak memory: 32708 KB

search exit code: 0
