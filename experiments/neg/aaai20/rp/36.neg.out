INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/translate/translate.py domain.pddl ins.pddl --sas-file output.sas
Parsing...
Parsing: [0.120s CPU, 0.129s wall-clock]
Normalizing task... [0.010s CPU, 0.009s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.006s wall-clock]
Normalizing Datalog program...
Unbound effect variables: Adding @object predicate.
Trivial rules: Converted to facts.
Normalizing Datalog program: [0.050s CPU, 0.045s wall-clock]
Preparing model... [0.030s CPU, 0.028s wall-clock]
Generated 2191 rules.
Computing model... [0.030s CPU, 0.027s wall-clock]
1639 relevant atoms
1997 auxiliary atoms
3636 final queue length
7455 total queue pushes
Completing instantiation... [0.080s CPU, 0.083s wall-clock]
Instantiating: [0.190s CPU, 0.193s wall-clock]
Computing fact groups...
Finding invariants...
174 initial candidates
Finding invariants: [27.790s CPU, 27.785s wall-clock]
Checking invariant weight... [0.000s CPU, 0.001s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
462 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.002s wall-clock]
Computing fact groups: [27.800s CPU, 27.794s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.007s wall-clock]
Translating task: [0.140s CPU, 0.137s wall-clock]
5067 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
361 propositions removed
Detecting unreachable propositions: [0.040s CPU, 0.041s wall-clock]
Reordering and filtering variables...
299 of 299 variables necessary.
54 of 63 mutex groups necessary.
853 of 853 operators necessary.
13 of 13 axiom rules necessary.
Reordering and filtering variables: [0.030s CPU, 0.031s wall-clock]
Translator variables: 299
Translator derived variables: 13
Translator facts: 726
Translator goal facts: 1
Translator mutex groups: 54
Translator total mutex groups size: 188
Translator operators: 853
Translator axioms: 13
Translator task size: 16074
Translator peak memory: 211652 KB
Writing output... [0.010s CPU, 0.017s wall-clock]
Done! [28.350s CPU, 28.357s wall-clock]

translate exit code: 0
INFO     Running search (release32).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
reading input... [t=1.9355e-05s]
done reading input! [t=0.0144458s]
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.0140485s
Discovered 16 landmarks, of which 0 are disjunctive and 0 are conjunctive 
43 edges
Simplifying 8211 unary operators... done! [6807 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done! [t=0.0361033s]
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000206525s
Variables: 299
FactPairs: 726
Bytes per state: 44
Conducting lazy best first search, (real) bound = 2147483647
8 initial landmarks, 1 goal landmarks
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
New best heuristic value for ff(transform = adapt_costs(one)): 12
[g=0, 1 evaluated, 0 expanded, t=0.0362992s, 6720 KB]
Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
Initial heuristic value for ff(transform = adapt_costs(one)): 12
New best heuristic value for ff(transform = adapt_costs(one)): 10
[g=1, 2 evaluated, 1 expanded, t=0.0364884s, 6720 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 9
[g=2, 3 evaluated, 2 expanded, t=0.0366252s, 6720 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 8
[g=1, 7 evaluated, 6 expanded, t=0.0371159s, 6720 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
New best heuristic value for ff(transform = adapt_costs(one)): 7
[g=2, 8 evaluated, 7 expanded, t=0.03725s, 6720 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 6
[g=16, 1965 evaluated, 1964 expanded, t=0.236431s, 6720 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 5
[g=17, 1966 evaluated, 1965 expanded, t=0.236562s, 6720 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
[g=19, 1968 evaluated, 1967 expanded, t=0.236781s, 6720 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 4
[g=27, 72202 evaluated, 72201 expanded, t=7.01446s, 21308 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 5
[g=29, 72204 evaluated, 72203 expanded, t=7.0147s, 21308 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 3
[g=75, 82244 evaluated, 82243 expanded, t=7.98813s, 23952 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 4
[g=77, 82246 evaluated, 82245 expanded, t=7.98837s, 23952 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 2
[g=115, 82291 evaluated, 82290 expanded, t=7.99274s, 23952 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
[g=116, 82292 evaluated, 82291 expanded, t=7.99284s, 23952 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
New best heuristic value for ff(transform = adapt_costs(one)): 1
[g=135, 82311 evaluated, 82310 expanded, t=7.99431s, 23952 KB]
Solution found!
Actual search time: 7.9582s [t=7.99437s]
program-inc-0 row-0 (1001)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
program-paint-1 row-0 (1001)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
program-inc-2 row-0 (1001)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
program-goto-not-last-cell-3-5 row-0 (1001)
eval-cond-not-last-cell-0-3 row-0 (1)
do-goto-0-3-5 row-0 (1)
program-end-5 row-0 (1)
check-main-end-0-5 row-0 (0)
repeat-end-main-0-5 row-0 (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-not-last-cell-0-3 row-0 (1)
dont-goto-0-3-5 row-0 (1)
program-goto-at-4-0 i0 row-0 (1001)
eval-cond-at-0-4 i0 row-0 (1)
do-goto-0-4-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-not-last-cell-0-3 row-0 (1)
do-goto-0-3-5 row-0 (1)
check-main-end-1-5 row-0 (0)
repeat-end-main-1-5 row-0 (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-not-last-cell-0-3 row-0 (1)
dont-goto-0-3-5 row-0 (1)
eval-cond-at-0-4 i0 row-0 (1)
do-goto-0-4-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-not-last-cell-0-3 row-0 (1)
dont-goto-0-3-5 row-0 (1)
eval-cond-at-0-4 i0 row-0 (1)
do-goto-0-4-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-not-last-cell-0-3 row-0 (1)
dont-goto-0-3-5 row-0 (1)
eval-cond-at-0-4 i0 row-0 (1)
do-goto-0-4-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-not-last-cell-0-3 row-0 (1)
do-goto-0-3-5 row-0 (1)
check-main-end-2-5 row-0 (0)
repeat-end-main-2-5 row-0 (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-not-last-cell-0-3 row-0 (1)
dont-goto-0-3-5 row-0 (1)
eval-cond-at-0-4 i0 row-0 (1)
do-goto-0-4-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-not-last-cell-0-3 row-0 (1)
dont-goto-0-3-5 row-0 (1)
eval-cond-at-0-4 i0 row-0 (1)
do-goto-0-4-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-not-last-cell-0-3 row-0 (1)
dont-goto-0-3-5 row-0 (1)
eval-cond-at-0-4 i0 row-0 (1)
do-goto-0-4-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-not-last-cell-0-3 row-0 (1)
do-goto-0-3-5 row-0 (1)
check-main-end-3-5 row-0 (0)
repeat-end-main-3-5 row-0 (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-not-last-cell-0-3 row-0 (1)
dont-goto-0-3-5 row-0 (1)
eval-cond-at-0-4 i0 row-0 (1)
do-goto-0-4-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-not-last-cell-0-3 row-0 (1)
do-goto-0-3-5 row-0 (1)
check-main-end-4-5 row-0 (0)
skip-4  (0)
Plan length: 136 step(s).
Plan cost: 5087
Expanded 82311 state(s).
Reopened 0 state(s).
Evaluated 82312 state(s).
Evaluations: 164624
Generated 721390 state(s).
Dead ends: 0 state(s).
Number of registered states: 82312
Int hash set load factor: 82312/131072 = 0.627991
Int hash set resizes: 17
Search time: 7.95821s
Total time: 7.99437s
Solution found.
Peak memory: 23952 KB

search exit code: 0
