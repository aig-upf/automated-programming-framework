INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/translate/translate.py domain.pddl ins.pddl --sas-file output.sas
Parsing...
Parsing: [0.060s CPU, 0.062s wall-clock]
Normalizing task... [0.000s CPU, 0.004s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.004s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.040s CPU, 0.039s wall-clock]
Preparing model... [0.020s CPU, 0.018s wall-clock]
Generated 1703 rules.
Computing model... [0.020s CPU, 0.019s wall-clock]
919 relevant atoms
1485 auxiliary atoms
2404 final queue length
4734 total queue pushes
Completing instantiation... [0.030s CPU, 0.031s wall-clock]
Instantiating: [0.120s CPU, 0.114s wall-clock]
Computing fact groups...
Finding invariants...
121 initial candidates
Finding invariants: [2.730s CPU, 2.724s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
90 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [2.730s CPU, 2.728s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.048s wall-clock]
392 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
10 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.016s wall-clock]
Reordering and filtering variables...
100 of 103 variables necessary.
54 of 63 mutex groups necessary.
679 of 679 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.008s wall-clock]
Translator variables: 100
Translator derived variables: 0
Translator facts: 297
Translator goal facts: 1
Translator mutex groups: 54
Translator total mutex groups size: 168
Translator operators: 679
Translator axioms: 0
Translator task size: 5506
Translator peak memory: 106840 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [2.990s CPU, 2.989s wall-clock]

translate exit code: 0
INFO     Running search (release32).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
reading input... [t=1.9274e-05s]
done reading input! [t=0.00502749s]
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00389049s
Discovered 12 landmarks, of which 0 are disjunctive and 0 are conjunctive 
32 edges
Simplifying 2180 unary operators... done! [1066 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done! [t=0.0119342s]
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000158325s
Variables: 100
FactPairs: 297
Bytes per state: 20
Conducting lazy best first search, (real) bound = 2147483647
5 initial landmarks, 1 goal landmarks
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
New best heuristic value for ff(transform = adapt_costs(one)): 11
[g=0, 1 evaluated, 0 expanded, t=0.0120421s, 5088 KB]
Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
Initial heuristic value for ff(transform = adapt_costs(one)): 11
New best heuristic value for ff(transform = adapt_costs(one)): 9
[g=1, 2 evaluated, 1 expanded, t=0.0121352s, 5088 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 8
[g=2, 3 evaluated, 2 expanded, t=0.0121845s, 5088 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 7
[g=1, 7 evaluated, 5 expanded, t=0.0123225s, 5088 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
New best heuristic value for ff(transform = adapt_costs(one)): 6
[g=2, 8 evaluated, 6 expanded, t=0.0123705s, 5088 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 5
[g=13, 1050779 evaluated, 726806 expanded, t=22.6586s, 204072 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 4
[g=14, 1050780 evaluated, 726807 expanded, t=22.6587s, 204072 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 4
[g=15, 1050781 evaluated, 726808 expanded, t=22.6588s, 204072 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 3
New best heuristic value for ff(transform = adapt_costs(one)): 3
[g=24, 1050790 evaluated, 726817 expanded, t=22.6589s, 204072 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
New best heuristic value for ff(transform = adapt_costs(one)): 2
[g=34, 1050800 evaluated, 726827 expanded, t=22.6591s, 204072 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
New best heuristic value for ff(transform = adapt_costs(one)): 1
[g=44, 1050810 evaluated, 726837 expanded, t=22.6593s, 204072 KB]
Solution found!
Actual search time: 22.6473s [t=22.6593s]
program-inc-0 row-0 (1001)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
program-paint-1 row-0 (1001)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
program-inc-2 row-0 (1001)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
program-inc-3 row-0 (1001)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
program-end-4 row-0 (1)
check-main-end-0-4 row-0 (0)
repeat-end-main-0-4 row-0 (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
check-main-end-1-4 row-0 (0)
skip-1  (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
check-main-end-2-4 row-0 (0)
skip-2  (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
check-main-end-3-4 row-0 (0)
skip-3  (0)
Plan length: 45 step(s).
Plan cost: 4021
Expanded 726838 state(s).
Reopened 0 state(s).
Evaluated 1050811 state(s).
Evaluations: 1777650
Generated 8318134 state(s).
Dead ends: 323972 state(s).
Number of registered states: 1050811
Int hash set load factor: 1050811/2097152 = 0.501066
Int hash set resizes: 21
Search time: 22.6474s
Total time: 22.6594s
Solution found.
Peak memory: 204072 KB

search exit code: 0
