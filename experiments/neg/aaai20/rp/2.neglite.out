INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/translate/translate.py domain.pddl ins.pddl --sas-file output.sas
Parsing...
Parsing: [0.050s CPU, 0.053s wall-clock]
Normalizing task... [0.010s CPU, 0.004s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.004s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.030s CPU, 0.034s wall-clock]
Preparing model... [0.020s CPU, 0.016s wall-clock]
Generated 1513 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
612 relevant atoms
1115 auxiliary atoms
1727 final queue length
2785 total queue pushes
Completing instantiation... [0.020s CPU, 0.016s wall-clock]
Instantiating: [0.080s CPU, 0.087s wall-clock]
Computing fact groups...
Finding invariants...
119 initial candidates
Finding invariants: [0.190s CPU, 0.190s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
76 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.190s CPU, 0.192s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.027s wall-clock]
235 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
8 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
87 of 90 variables necessary.
55 of 62 mutex groups necessary.
441 of 441 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.005s wall-clock]
Translator variables: 87
Translator derived variables: 0
Translator facts: 224
Translator goal facts: 1
Translator mutex groups: 55
Translator total mutex groups size: 140
Translator operators: 441
Translator axioms: 0
Translator task size: 3497
Translator peak memory: 46416 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.380s CPU, 0.383s wall-clock]

translate exit code: 0
INFO     Running search (release32).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
reading input... [t=1.9352e-05s]
done reading input! [t=0.00333084s]
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00189069s
Discovered 10 landmarks, of which 0 are disjunctive and 0 are conjunctive 
16 edges
Simplifying 1325 unary operators... done! [646 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done! [t=0.0072231s]
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000121218s
Variables: 87
FactPairs: 224
Bytes per state: 16
Conducting lazy best first search, (real) bound = 2147483647
5 initial landmarks, 1 goal landmarks
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 5
New best heuristic value for ff(transform = adapt_costs(one)): 9
[g=0, 1 evaluated, 0 expanded, t=0.00732222s, 4688 KB]
Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 5
Initial heuristic value for ff(transform = adapt_costs(one)): 9
New best heuristic value for ff(transform = adapt_costs(one)): 7
[g=1, 2 evaluated, 1 expanded, t=0.00739563s, 4688 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 6
[g=2, 3 evaluated, 2 expanded, t=0.00743791s, 4688 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 5
[g=1, 7 evaluated, 5 expanded, t=0.00754404s, 4688 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 4
New best heuristic value for ff(transform = adapt_costs(one)): 4
[g=2, 8 evaluated, 6 expanded, t=0.00758531s, 4688 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 3
[g=13, 334271 evaluated, 238367 expanded, t=5.1809s, 50116 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 2
[g=14, 334272 evaluated, 238368 expanded, t=5.18098s, 50116 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
[g=15, 334273 evaluated, 238369 expanded, t=5.18102s, 50116 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
New best heuristic value for ff(transform = adapt_costs(one)): 1
[g=24, 334282 evaluated, 238378 expanded, t=5.18116s, 50116 KB]
Solution found!
Actual search time: 5.17391s [t=5.1812s]
program-inc-0 row-0 (1001)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
program-paint-1 row-0 (1001)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
program-inc-2 row-0 (1001)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
program-inc-3 row-0 (1001)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
program-end-4 row-0 (1)
check-main-end-0-4 row-0 (0)
repeat-end-main-0-4 row-0 (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
check-main-end-1-4 row-0 (0)
skip-1  (0)
Plan length: 25 step(s).
Plan cost: 4013
Expanded 238379 state(s).
Reopened 0 state(s).
Evaluated 334283 state(s).
Evaluations: 572663
Generated 1693292 state(s).
Dead ends: 95903 state(s).
Number of registered states: 334283
Int hash set load factor: 334283/524288 = 0.637594
Int hash set resizes: 19
Search time: 5.17393s
Total time: 5.1812s
Solution found.
Peak memory: 50116 KB

search exit code: 0
