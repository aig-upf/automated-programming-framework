INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/translate/translate.py domain.pddl ins.pddl --sas-file output.sas
Parsing...
Parsing: [0.070s CPU, 0.071s wall-clock]
Normalizing task... [0.000s CPU, 0.008s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.005s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.040s CPU, 0.047s wall-clock]
Preparing model... [0.030s CPU, 0.027s wall-clock]
Generated 1773 rules.
Computing model... [0.030s CPU, 0.031s wall-clock]
1014 relevant atoms
1560 auxiliary atoms
2574 final queue length
5355 total queue pushes
Completing instantiation... [0.050s CPU, 0.041s wall-clock]
Instantiating: [0.160s CPU, 0.156s wall-clock]
Computing fact groups...
Finding invariants...
119 initial candidates
Finding invariants: [0.550s CPU, 0.549s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
92 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.550s CPU, 0.552s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.053s wall-clock]
400 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
12 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.019s wall-clock]
Reordering and filtering variables...
101 of 104 variables necessary.
54 of 62 mutex groups necessary.
755 of 755 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 101
Translator derived variables: 0
Translator facts: 313
Translator goal facts: 1
Translator mutex groups: 54
Translator total mutex groups size: 178
Translator operators: 755
Translator axioms: 0
Translator task size: 6077
Translator peak memory: 54992 KB
Writing output... [0.000s CPU, 0.008s wall-clock]
Done! [0.870s CPU, 0.880s wall-clock]

translate exit code: 0
INFO     Running search (release32).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
reading input... [t=2.9941e-05s]
done reading input! [t=0.00625077s]
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00355483s
Discovered 9 landmarks, of which 0 are disjunctive and 0 are conjunctive 
15 edges
Simplifying 2454 unary operators... done! [1195 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done! [t=0.0139454s]
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.00018952s
Variables: 101
FactPairs: 313
Bytes per state: 20
Conducting lazy best first search, (real) bound = 2147483647
4 initial landmarks, 1 goal landmarks
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 5
New best heuristic value for ff(transform = adapt_costs(one)): 10
[g=0, 1 evaluated, 0 expanded, t=0.014068s, 5096 KB]
Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 5
Initial heuristic value for ff(transform = adapt_costs(one)): 10
New best heuristic value for ff(transform = adapt_costs(one)): 8
[g=1, 2 evaluated, 1 expanded, t=0.0141764s, 5096 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 7
[g=2, 3 evaluated, 2 expanded, t=0.014232s, 5096 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 6
[g=1, 7 evaluated, 5 expanded, t=0.0143939s, 5096 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 3
New best heuristic value for ff(transform = adapt_costs(one)): 5
[g=2, 8 evaluated, 6 expanded, t=0.0144477s, 5096 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 4
[g=13, 1552994 evaluated, 1010610 expanded, t=34.6242s, 312780 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 3
[g=14, 1552995 evaluated, 1010611 expanded, t=34.6242s, 312780 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
[g=16, 1552997 evaluated, 1010613 expanded, t=34.6243s, 312780 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 2
[g=57, 2125802 evaluated, 1390493 expanded, t=47.7748s, 441144 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
[g=61, 2125806 evaluated, 1390497 expanded, t=47.775s, 441144 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 1
[g=91, 2125836 evaluated, 1390527 expanded, t=47.7756s, 441144 KB]
Solution found!
Actual search time: 47.7616s [t=47.7756s]
program-goto-white-cell-0-2 i7 row-0 (1001)
eval-cond-white-cell-0-0 i7 row-0 (1)
do-goto-0-0-2 row-0 (1)
program-inc-2 row-0 (1001)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
program-paint-3 row-0 (1001)
check-paint-0-3 row-0 (0)
execute-paint-0-3 row-0 (1)
program-goto-last-cell-4-1 row-0 (1001)
eval-cond-last-cell-0-4 row-0 (1)
do-goto-0-4-1 row-0 (1)
program-inc-1 row-0 (1001)
check-inc-0-1 row-0 (0)
execute-inc-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
check-paint-0-3 row-0 (0)
execute-paint-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
dont-goto-0-4-1 row-0 (1)
program-end-5 row-0 (1)
check-main-end-0-5 row-0 (0)
repeat-end-main-0-5 row-0 (0)
eval-cond-white-cell-0-0 i7 row-0 (1)
do-goto-0-0-2 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
check-paint-0-3 row-0 (0)
execute-paint-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
do-goto-0-4-1 row-0 (1)
check-inc-0-1 row-0 (0)
execute-inc-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
check-paint-0-3 row-0 (0)
execute-paint-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
do-goto-0-4-1 row-0 (1)
check-inc-0-1 row-0 (0)
execute-inc-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
check-paint-0-3 row-0 (0)
execute-paint-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
do-goto-0-4-1 row-0 (1)
check-inc-0-1 row-0 (0)
execute-inc-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
check-paint-0-3 row-0 (0)
execute-paint-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
dont-goto-0-4-1 row-0 (1)
check-main-end-1-5 row-0 (0)
repeat-end-main-1-5 row-0 (0)
eval-cond-white-cell-0-0 i7 row-0 (1)
do-goto-0-0-2 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
check-paint-0-3 row-0 (0)
execute-paint-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
do-goto-0-4-1 row-0 (1)
check-inc-0-1 row-0 (0)
execute-inc-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
check-paint-0-3 row-0 (0)
execute-paint-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
do-goto-0-4-1 row-0 (1)
check-inc-0-1 row-0 (0)
execute-inc-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
check-paint-0-3 row-0 (0)
execute-paint-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
do-goto-0-4-1 row-0 (1)
check-inc-0-1 row-0 (0)
execute-inc-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
check-paint-0-3 row-0 (0)
execute-paint-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
dont-goto-0-4-1 row-0 (1)
check-main-end-2-5 row-0 (0)
repeat-end-main-2-5 row-0 (0)
Plan length: 92 step(s).
Plan cost: 5059
Expanded 1390528 state(s).
Reopened 0 state(s).
Evaluated 2125837 state(s).
Evaluations: 3516366
Generated 19062236 state(s).
Dead ends: 735308 state(s).
Number of registered states: 2125837
Int hash set load factor: 2125837/4194304 = 0.506839
Int hash set resizes: 22
Search time: 47.7616s
Total time: 47.7756s
Solution found.
Peak memory: 441144 KB

search exit code: 0
