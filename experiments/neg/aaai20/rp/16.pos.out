INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/translate/translate.py domain.pddl ins.pddl --sas-file output.sas
Parsing...
Parsing: [0.060s CPU, 0.074s wall-clock]
Normalizing task... [0.010s CPU, 0.005s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.005s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.040s CPU, 0.041s wall-clock]
Preparing model... [0.020s CPU, 0.020s wall-clock]
Generated 1880 rules.
Computing model... [0.030s CPU, 0.033s wall-clock]
1123 relevant atoms
1700 auxiliary atoms
2823 final queue length
6204 total queue pushes
Completing instantiation... [0.040s CPU, 0.038s wall-clock]
Instantiating: [0.140s CPU, 0.140s wall-clock]
Computing fact groups...
Finding invariants...
120 initial candidates
Finding invariants: [11.540s CPU, 11.537s wall-clock]
Checking invariant weight... [0.000s CPU, 0.001s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
97 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [11.540s CPU, 11.541s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.003s wall-clock]
Translating task: [0.070s CPU, 0.064s wall-clock]
660 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
8 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.021s wall-clock]
Reordering and filtering variables...
108 of 111 variables necessary.
54 of 63 mutex groups necessary.
840 of 840 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 108
Translator derived variables: 0
Translator facts: 343
Translator goal facts: 1
Translator mutex groups: 54
Translator total mutex groups size: 188
Translator operators: 840
Translator axioms: 0
Translator task size: 7059
Translator peak memory: 329880 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [11.860s CPU, 11.867s wall-clock]

translate exit code: 0
INFO     Running search (release32).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
reading input... [t=1.8688e-05s]
done reading input! [t=0.00658315s]
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00408034s
Discovered 10 landmarks, of which 0 are disjunctive and 0 are conjunctive 
21 edges
Simplifying 2974 unary operators... done! [1570 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done! [t=0.0158357s]
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000190844s
Variables: 108
FactPairs: 343
Bytes per state: 20
Conducting lazy best first search, (real) bound = 2147483647
4 initial landmarks, 1 goal landmarks
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
New best heuristic value for ff(transform = adapt_costs(one)): 11
[g=0, 1 evaluated, 0 expanded, t=0.0159526s, 5092 KB]
Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
Initial heuristic value for ff(transform = adapt_costs(one)): 11
New best heuristic value for ff(transform = adapt_costs(one)): 9
[g=1, 2 evaluated, 1 expanded, t=0.0160955s, 5092 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 8
[g=2, 3 evaluated, 2 expanded, t=0.0161511s, 5092 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 7
[g=1, 7 evaluated, 5 expanded, t=0.0163167s, 5092 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 4
New best heuristic value for ff(transform = adapt_costs(one)): 6
[g=2, 8 evaluated, 6 expanded, t=0.0163709s, 5092 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 5
[g=4, 1136 evaluated, 810 expanded, t=0.0491856s, 5364 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 4
[g=5, 1137 evaluated, 811 expanded, t=0.0492378s, 5364 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 3
[g=7, 1139 evaluated, 813 expanded, t=0.0493013s, 5364 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 3
[g=19, 3275 evaluated, 2710 expanded, t=0.105594s, 5760 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
[g=21, 3277 evaluated, 2712 expanded, t=0.105676s, 5760 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 2
[g=65, 178213 evaluated, 139907 expanded, t=4.26009s, 26592 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
[g=67, 178215 evaluated, 139909 expanded, t=4.2602s, 26724 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 1
[g=85, 178233 evaluated, 139927 expanded, t=4.2606s, 26724 KB]
Solution found!
Actual search time: 4.24474s [t=4.26064s]
program-inc-0 row-0 (1001)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
program-paint-1 row-0 (1001)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
program-inc-2 row-0 (1001)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
program-goto-not-last-cell-3-5 row-0 (1001)
eval-cond-not-last-cell-0-3 row-0 (1)
do-goto-0-3-5 row-0 (1)
program-end-5 row-0 (1)
check-main-end-0-5 row-0 (0)
repeat-end-main-0-5 row-0 (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-not-last-cell-0-3 row-0 (1)
do-goto-0-3-5 row-0 (1)
check-main-end-1-5 row-0 (0)
repeat-end-main-1-5 row-0 (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-not-last-cell-0-3 row-0 (1)
dont-goto-0-3-5 row-0 (1)
program-goto-at-4-0 i7 row-0 (1001)
eval-cond-at-0-4 i7 row-0 (1)
do-goto-0-4-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-not-last-cell-0-3 row-0 (1)
dont-goto-0-3-5 row-0 (1)
eval-cond-at-0-4 i7 row-0 (1)
do-goto-0-4-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-not-last-cell-0-3 row-0 (1)
dont-goto-0-3-5 row-0 (1)
eval-cond-at-0-4 i7 row-0 (1)
do-goto-0-4-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-not-last-cell-0-3 row-0 (1)
do-goto-0-3-5 row-0 (1)
check-main-end-2-5 row-0 (0)
repeat-end-main-2-5 row-0 (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-not-last-cell-0-3 row-0 (1)
dont-goto-0-3-5 row-0 (1)
eval-cond-at-0-4 i7 row-0 (1)
do-goto-0-4-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-not-last-cell-0-3 row-0 (1)
do-goto-0-3-5 row-0 (1)
check-main-end-3-5 row-0 (0)
repeat-end-main-3-5 row-0 (0)
Plan length: 86 step(s).
Plan cost: 5054
Expanded 139928 state(s).
Reopened 0 state(s).
Evaluated 178234 state(s).
Evaluations: 318163
Generated 718342 state(s).
Dead ends: 38305 state(s).
Number of registered states: 178234
Int hash set load factor: 178234/262144 = 0.679909
Int hash set resizes: 18
Search time: 4.24475s
Total time: 4.26065s
Solution found.
Peak memory: 26724 KB

search exit code: 0
