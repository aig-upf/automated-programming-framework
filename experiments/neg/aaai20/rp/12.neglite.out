INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/translate/translate.py domain.pddl ins.pddl --sas-file output.sas
Parsing...
Parsing: [0.070s CPU, 0.075s wall-clock]
Normalizing task... [0.010s CPU, 0.005s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.005s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.040s CPU, 0.041s wall-clock]
Preparing model... [0.020s CPU, 0.020s wall-clock]
Generated 1907 rules.
Computing model... [0.040s CPU, 0.032s wall-clock]
1123 relevant atoms
1695 auxiliary atoms
2818 final queue length
6288 total queue pushes
Completing instantiation... [0.040s CPU, 0.041s wall-clock]
Instantiating: [0.140s CPU, 0.142s wall-clock]
Computing fact groups...
Finding invariants...
121 initial candidates
Finding invariants: [9.630s CPU, 9.630s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
98 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [9.630s CPU, 9.634s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.003s wall-clock]
Translating task: [0.080s CPU, 0.072s wall-clock]
630 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
8 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.021s wall-clock]
Reordering and filtering variables...
109 of 112 variables necessary.
55 of 64 mutex groups necessary.
836 of 836 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 109
Translator derived variables: 0
Translator facts: 345
Translator goal facts: 1
Translator mutex groups: 55
Translator total mutex groups size: 192
Translator operators: 836
Translator axioms: 0
Translator task size: 7077
Translator peak memory: 308972 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [9.970s CPU, 9.969s wall-clock]

translate exit code: 0
INFO     Running search (release32).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
reading input... [t=1.8301e-05s]
done reading input! [t=0.00650477s]
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00411624s
Discovered 12 landmarks, of which 0 are disjunctive and 0 are conjunctive 
28 edges
Simplifying 2975 unary operators... done! [1571 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done! [t=0.0156979s]
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000188908s
Variables: 109
FactPairs: 345
Bytes per state: 20
Conducting lazy best first search, (real) bound = 2147483647
5 initial landmarks, 1 goal landmarks
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
New best heuristic value for ff(transform = adapt_costs(one)): 11
[g=0, 1 evaluated, 0 expanded, t=0.0158159s, 5068 KB]
Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
Initial heuristic value for ff(transform = adapt_costs(one)): 11
New best heuristic value for ff(transform = adapt_costs(one)): 9
[g=1, 2 evaluated, 1 expanded, t=0.0159247s, 5068 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 8
[g=2, 3 evaluated, 2 expanded, t=0.0159815s, 5068 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 7
[g=1, 7 evaluated, 5 expanded, t=0.0161513s, 5068 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
New best heuristic value for ff(transform = adapt_costs(one)): 6
[g=2, 8 evaluated, 6 expanded, t=0.0162076s, 5068 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 5
[g=28, 18152452 evaluated, 12768922 expanded, t=462.127s, 3203804 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 4
[g=29, 18152453 evaluated, 12768923 expanded, t=462.128s, 3203804 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 5
[g=33, 18152457 evaluated, 12768927 expanded, t=462.128s, 3203804 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 3
[g=69, 18153369 evaluated, 12769727 expanded, t=462.151s, 3203804 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 4
[g=73, 18153373 evaluated, 12769731 expanded, t=462.151s, 3203804 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 2
[g=101, 18153401 evaluated, 12769759 expanded, t=462.152s, 3203804 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
[g=102, 18153402 evaluated, 12769760 expanded, t=462.152s, 3203804 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
New best heuristic value for ff(transform = adapt_costs(one)): 1
[g=109, 18153409 evaluated, 12769767 expanded, t=462.152s, 3203936 KB]
Solution found!
Actual search time: 462.136s [t=462.152s]
program-goto-at-0-3 i1 row-0 (1001)
eval-cond-at-0-0 i1 row-0 (1)
do-goto-0-0-3 row-0 (1)
program-inc-3 row-0 (1001)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
program-goto-last-cell-4-1 row-0 (1001)
eval-cond-last-cell-0-4 row-0 (1)
do-goto-0-4-1 row-0 (1)
program-paint-1 row-0 (1001)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
program-inc-2 row-0 (1001)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
do-goto-0-4-1 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
dont-goto-0-4-1 row-0 (1)
program-end-5 row-0 (1)
check-main-end-0-5 row-0 (0)
repeat-end-main-0-5 row-0 (0)
eval-cond-at-0-0 i1 row-0 (1)
do-goto-0-0-3 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
do-goto-0-4-1 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
do-goto-0-4-1 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
do-goto-0-4-1 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
do-goto-0-4-1 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
dont-goto-0-4-1 row-0 (1)
check-main-end-1-5 row-0 (0)
repeat-end-main-1-5 row-0 (0)
eval-cond-at-0-0 i1 row-0 (1)
do-goto-0-0-3 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
do-goto-0-4-1 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
do-goto-0-4-1 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
do-goto-0-4-1 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
dont-goto-0-4-1 row-0 (1)
check-main-end-2-5 row-0 (0)
repeat-end-main-2-5 row-0 (0)
eval-cond-at-0-0 i1 row-0 (1)
do-goto-0-0-3 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
dont-goto-0-4-1 row-0 (1)
check-main-end-3-5 row-0 (0)
skip-3  (0)
Plan length: 110 step(s).
Plan cost: 5071
Expanded 12769768 state(s).
Reopened 0 state(s).
Evaluated 18153410 state(s).
Evaluations: 30923179
Generated 131438001 state(s).
Dead ends: 5383641 state(s).
Number of registered states: 18153410
Int hash set load factor: 18153410/33554432 = 0.541014
Int hash set resizes: 25
Search time: 462.136s
Total time: 462.152s
Solution found.
Peak memory: 3203936 KB

search exit code: 0
