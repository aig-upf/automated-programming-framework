INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/translate/translate.py domain.pddl ins.pddl --sas-file output.sas
Parsing...
Parsing: [0.070s CPU, 0.064s wall-clock]
Normalizing task... [0.000s CPU, 0.005s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.004s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.040s CPU, 0.037s wall-clock]
Preparing model... [0.020s CPU, 0.018s wall-clock]
Generated 1776 rules.
Computing model... [0.020s CPU, 0.020s wall-clock]
1012 relevant atoms
1555 auxiliary atoms
2567 final queue length
5322 total queue pushes
Completing instantiation... [0.040s CPU, 0.035s wall-clock]
Instantiating: [0.120s CPU, 0.117s wall-clock]
Computing fact groups...
Finding invariants...
120 initial candidates
Finding invariants: [0.750s CPU, 0.756s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
92 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.760s CPU, 0.759s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.040s CPU, 0.045s wall-clock]
380 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
14 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.024s wall-clock]
Reordering and filtering variables...
100 of 103 variables necessary.
55 of 63 mutex groups necessary.
751 of 751 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 100
Translator derived variables: 0
Translator facts: 311
Translator goal facts: 1
Translator mutex groups: 55
Translator total mutex groups size: 181
Translator operators: 751
Translator axioms: 0
Translator task size: 5993
Translator peak memory: 61856 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [1.030s CPU, 1.031s wall-clock]

translate exit code: 0
INFO     Running search (release32).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
reading input... [t=2.1804e-05s]
done reading input! [t=0.00556242s]
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.0031878s
Discovered 11 landmarks, of which 0 are disjunctive and 0 are conjunctive 
21 edges
Simplifying 2425 unary operators... done! [1166 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done! [t=0.0123351s]
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000171138s
Variables: 100
FactPairs: 311
Bytes per state: 20
Conducting lazy best first search, (real) bound = 2147483647
5 initial landmarks, 1 goal landmarks
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
New best heuristic value for ff(transform = adapt_costs(one)): 10
[g=0, 1 evaluated, 0 expanded, t=0.0124428s, 5092 KB]
Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
Initial heuristic value for ff(transform = adapt_costs(one)): 10
New best heuristic value for ff(transform = adapt_costs(one)): 8
[g=1, 2 evaluated, 1 expanded, t=0.0125403s, 5092 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 7
[g=2, 3 evaluated, 2 expanded, t=0.0125915s, 5092 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 6
[g=1, 7 evaluated, 5 expanded, t=0.0127383s, 5092 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 5
New best heuristic value for ff(transform = adapt_costs(one)): 5
[g=2, 8 evaluated, 6 expanded, t=0.0127883s, 5092 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 4
[g=21, 14167928 evaluated, 9631595 expanded, t=279.453s, 2521456 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 3
[g=22, 14167930 evaluated, 9631597 expanded, t=279.454s, 2521456 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 4
[g=24, 14167932 evaluated, 9631599 expanded, t=279.454s, 2521456 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 2
[g=56, 14168111 evaluated, 9631760 expanded, t=279.457s, 2521456 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
[g=57, 14168112 evaluated, 9631761 expanded, t=279.457s, 2521456 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
New best heuristic value for ff(transform = adapt_costs(one)): 1
[g=90, 14168145 evaluated, 9631794 expanded, t=279.458s, 2521456 KB]
Solution found!
Actual search time: 279.445s [t=279.458s]
program-inc-0 row-0 (1001)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
program-paint-1 row-0 (1001)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
program-inc-2 row-0 (1001)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
program-goto-last-cell-3-0 row-0 (1001)
eval-cond-last-cell-0-3 row-0 (1)
do-goto-0-3-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-last-cell-0-3 row-0 (1)
dont-goto-0-3-0 row-0 (1)
program-end-4 row-0 (1)
check-main-end-0-4 row-0 (0)
repeat-end-main-0-4 row-0 (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-last-cell-0-3 row-0 (1)
do-goto-0-3-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-last-cell-0-3 row-0 (1)
do-goto-0-3-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-last-cell-0-3 row-0 (1)
do-goto-0-3-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-last-cell-0-3 row-0 (1)
dont-goto-0-3-0 row-0 (1)
check-main-end-1-4 row-0 (0)
repeat-end-main-1-4 row-0 (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-last-cell-0-3 row-0 (1)
do-goto-0-3-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-last-cell-0-3 row-0 (1)
do-goto-0-3-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-last-cell-0-3 row-0 (1)
do-goto-0-3-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-last-cell-0-3 row-0 (1)
dont-goto-0-3-0 row-0 (1)
check-main-end-2-4 row-0 (0)
skip-2  (0)
Plan length: 91 step(s).
Plan cost: 4055
Expanded 9631795 state(s).
Reopened 0 state(s).
Evaluated 14168146 state(s).
Evaluations: 23799942
Generated 99122118 state(s).
Dead ends: 4536350 state(s).
Number of registered states: 14168146
Int hash set load factor: 14168146/33554432 = 0.422244
Int hash set resizes: 25
Search time: 279.445s
Total time: 279.458s
Solution found.
Peak memory: 2521456 KB

search exit code: 0
