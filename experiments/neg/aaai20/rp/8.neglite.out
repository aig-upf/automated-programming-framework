INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/translate/translate.py domain.pddl ins.pddl --sas-file output.sas
Parsing...
Parsing: [0.070s CPU, 0.072s wall-clock]
Normalizing task... [0.000s CPU, 0.005s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.004s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.040s CPU, 0.040s wall-clock]
Preparing model... [0.020s CPU, 0.020s wall-clock]
Generated 1847 rules.
Computing model... [0.030s CPU, 0.030s wall-clock]
1026 relevant atoms
1595 auxiliary atoms
2621 final queue length
5533 total queue pushes
Completing instantiation... [0.030s CPU, 0.035s wall-clock]
Instantiating: [0.130s CPU, 0.132s wall-clock]
Computing fact groups...
Finding invariants...
121 initial candidates
Finding invariants: [5.010s CPU, 5.008s wall-clock]
Checking invariant weight... [0.000s CPU, 0.001s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
94 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [5.010s CPU, 5.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.003s wall-clock]
Translating task: [0.070s CPU, 0.066s wall-clock]
615 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
8 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.019s wall-clock]
Reordering and filtering variables...
105 of 108 variables necessary.
55 of 64 mutex groups necessary.
761 of 761 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.009s wall-clock]
Translator variables: 105
Translator derived variables: 0
Translator facts: 322
Translator goal facts: 1
Translator mutex groups: 55
Translator total mutex groups size: 182
Translator operators: 761
Translator axioms: 0
Translator task size: 6430
Translator peak memory: 156460 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [5.320s CPU, 5.325s wall-clock]

translate exit code: 0
INFO     Running search (release32).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
reading input... [t=1.9139e-05s]
done reading input! [t=0.00585402s]
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00377102s
Discovered 12 landmarks, of which 0 are disjunctive and 0 are conjunctive 
28 edges
Simplifying 2695 unary operators... done! [1436 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done! [t=0.0143324s]
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000175254s
Variables: 105
FactPairs: 322
Bytes per state: 20
Conducting lazy best first search, (real) bound = 2147483647
5 initial landmarks, 1 goal landmarks
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
New best heuristic value for ff(transform = adapt_costs(one)): 11
[g=0, 1 evaluated, 0 expanded, t=0.0144488s, 5124 KB]
Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
Initial heuristic value for ff(transform = adapt_costs(one)): 11
New best heuristic value for ff(transform = adapt_costs(one)): 9
[g=1, 2 evaluated, 1 expanded, t=0.0145499s, 5124 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 8
[g=2, 3 evaluated, 2 expanded, t=0.0146054s, 5124 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 7
[g=1, 7 evaluated, 5 expanded, t=0.0147651s, 5124 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
New best heuristic value for ff(transform = adapt_costs(one)): 6
[g=2, 8 evaluated, 6 expanded, t=0.0148189s, 5124 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 5
[g=21, 14326953 evaluated, 9742904 expanded, t=334.243s, 2511560 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 4
[g=22, 14326954 evaluated, 9742905 expanded, t=334.243s, 2511560 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 5
[g=24, 14327126 evaluated, 9743042 expanded, t=334.248s, 2511560 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 3
[g=32, 14327143 evaluated, 9743059 expanded, t=334.248s, 2511692 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 4
[g=34, 14327146 evaluated, 9743062 expanded, t=334.249s, 2511692 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 2
[g=50, 14327162 evaluated, 9743078 expanded, t=334.249s, 2511692 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
[g=51, 14327163 evaluated, 9743079 expanded, t=334.249s, 2511692 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
New best heuristic value for ff(transform = adapt_costs(one)): 1
[g=84, 14327196 evaluated, 9743112 expanded, t=334.25s, 2511692 KB]
Solution found!
Actual search time: 334.235s [t=334.25s]
program-inc-0 row-0 (1001)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
program-paint-1 row-0 (1001)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
program-inc-2 row-0 (1001)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
program-goto-last-cell-3-0 row-0 (1001)
eval-cond-last-cell-0-3 row-0 (1)
do-goto-0-3-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-last-cell-0-3 row-0 (1)
dont-goto-0-3-0 row-0 (1)
program-end-4 row-0 (1)
check-main-end-0-4 row-0 (0)
repeat-end-main-0-4 row-0 (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-last-cell-0-3 row-0 (1)
dont-goto-0-3-0 row-0 (1)
check-main-end-1-4 row-0 (0)
repeat-end-main-1-4 row-0 (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-last-cell-0-3 row-0 (1)
do-goto-0-3-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-last-cell-0-3 row-0 (1)
dont-goto-0-3-0 row-0 (1)
check-main-end-2-4 row-0 (0)
repeat-end-main-2-4 row-0 (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-last-cell-0-3 row-0 (1)
do-goto-0-3-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-last-cell-0-3 row-0 (1)
do-goto-0-3-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-last-cell-0-3 row-0 (1)
do-goto-0-3-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-last-cell-0-3 row-0 (1)
dont-goto-0-3-0 row-0 (1)
check-main-end-3-4 row-0 (0)
skip-3  (0)
Plan length: 85 step(s).
Plan cost: 4050
Expanded 9743113 state(s).
Reopened 0 state(s).
Evaluated 14327197 state(s).
Evaluations: 24070311
Generated 100244693 state(s).
Dead ends: 4584083 state(s).
Number of registered states: 14327197
Int hash set load factor: 14327197/33554432 = 0.426984
Int hash set resizes: 25
Search time: 334.235s
Total time: 334.25s
Solution found.
Peak memory: 2511692 KB

search exit code: 0
