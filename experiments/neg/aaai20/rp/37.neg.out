INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/translate/translate.py domain.pddl ins.pddl --sas-file output.sas
Parsing...
Parsing: [0.090s CPU, 0.097s wall-clock]
Normalizing task... [0.010s CPU, 0.007s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.005s wall-clock]
Normalizing Datalog program...
Unbound effect variables: Adding @object predicate.
Trivial rules: Converted to facts.
Normalizing Datalog program: [0.050s CPU, 0.042s wall-clock]
Preparing model... [0.020s CPU, 0.027s wall-clock]
Generated 1963 rules.
Computing model... [0.020s CPU, 0.020s wall-clock]
1017 relevant atoms
1495 auxiliary atoms
2512 final queue length
4153 total queue pushes
Completing instantiation... [0.030s CPU, 0.034s wall-clock]
Instantiating: [0.120s CPU, 0.130s wall-clock]
Computing fact groups...
Finding invariants...
174 initial candidates
Finding invariants: [28.790s CPU, 28.781s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
298 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [28.800s CPU, 28.787s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.003s wall-clock]
Translating task: [0.050s CPU, 0.054s wall-clock]
1565 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
247 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.019s wall-clock]
Reordering and filtering variables...
192 of 192 variables necessary.
54 of 63 mutex groups necessary.
543 of 543 operators necessary.
13 of 13 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.014s wall-clock]
Translator variables: 192
Translator derived variables: 13
Translator facts: 452
Translator goal facts: 1
Translator mutex groups: 54
Translator total mutex groups size: 148
Translator operators: 543
Translator axioms: 13
Translator task size: 7040
Translator peak memory: 206760 KB
Writing output... [0.000s CPU, 0.008s wall-clock]
Done! [29.110s CPU, 29.119s wall-clock]

translate exit code: 0
INFO     Running search (release32).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
reading input... [t=2.2465e-05s]
done reading input! [t=0.00615103s]
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00874183s
Discovered 16 landmarks, of which 0 are disjunctive and 0 are conjunctive 
43 edges
Simplifying 3286 unary operators... done! [2462 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done! [t=0.0188326s]
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000196634s
Variables: 192
FactPairs: 452
Bytes per state: 28
Conducting lazy best first search, (real) bound = 2147483647
8 initial landmarks, 1 goal landmarks
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
New best heuristic value for ff(transform = adapt_costs(one)): 12
[g=0, 1 evaluated, 0 expanded, t=0.0189724s, 5248 KB]
Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
Initial heuristic value for ff(transform = adapt_costs(one)): 12
New best heuristic value for ff(transform = adapt_costs(one)): 11
[g=1, 2 evaluated, 1 expanded, t=0.0190922s, 5248 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 9
[g=2, 3 evaluated, 2 expanded, t=0.0191751s, 5248 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 8
[g=3, 4 evaluated, 3 expanded, t=0.0192603s, 5248 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
New best heuristic value for ff(transform = adapt_costs(one)): 7
[g=2, 9 evaluated, 8 expanded, t=0.0195693s, 5248 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 6
[g=13, 866044 evaluated, 866043 expanded, t=40.6252s, 147312 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 5
[g=14, 866046 evaluated, 866045 expanded, t=40.6254s, 147312 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
[g=16, 866048 evaluated, 866047 expanded, t=40.6255s, 147312 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 4
[g=45, 6169851 evaluated, 6169850 expanded, t=279.303s, 859408 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 4
[g=46, 6169852 evaluated, 6169851 expanded, t=279.303s, 859408 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 3
New best heuristic value for ff(transform = adapt_costs(one)): 3
[g=61, 6169867 evaluated, 6169866 expanded, t=279.304s, 859408 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
New best heuristic value for ff(transform = adapt_costs(one)): 2
[g=69, 6169875 evaluated, 6169874 expanded, t=279.304s, 859408 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
New best heuristic value for ff(transform = adapt_costs(one)): 1
[g=93, 6169899 evaluated, 6169898 expanded, t=279.305s, 859408 KB]
Solution found!
Actual search time: 279.286s [t=279.305s]
program-goto-at-0-3 i1 row-0 (1001)
eval-cond-at-0-0 i1 row-0 (1)
do-goto-0-0-3 row-0 (1)
program-inc-3 row-0 (1001)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
program-goto-last-cell-4-1 row-0 (1001)
eval-cond-last-cell-0-4 row-0 (1)
do-goto-0-4-1 row-0 (1)
program-paint-1 row-0 (1001)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
program-inc-2 row-0 (1001)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
dont-goto-0-4-1 row-0 (1)
program-end-5 row-0 (1)
check-main-end-0-5 row-0 (0)
repeat-end-main-0-5 row-0 (0)
eval-cond-at-0-0 i1 row-0 (1)
do-goto-0-0-3 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
do-goto-0-4-1 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
do-goto-0-4-1 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
dont-goto-0-4-1 row-0 (1)
check-main-end-1-5 row-0 (0)
repeat-end-main-1-5 row-0 (0)
eval-cond-at-0-0 i1 row-0 (1)
do-goto-0-0-3 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
do-goto-0-4-1 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
dont-goto-0-4-1 row-0 (1)
check-main-end-2-5 row-0 (0)
skip-2  (0)
eval-cond-at-0-0 i1 row-0 (1)
do-goto-0-0-3 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
dont-goto-0-4-1 row-0 (1)
check-main-end-3-5 row-0 (0)
skip-3  (0)
eval-cond-at-0-0 i1 row-0 (1)
do-goto-0-0-3 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
do-goto-0-4-1 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
do-goto-0-4-1 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
check-inc-0-3 row-0 (0)
execute-inc-0-3 row-0 (1)
eval-cond-last-cell-0-4 row-0 (1)
dont-goto-0-4-1 row-0 (1)
check-main-end-4-5 row-0 (0)
skip-4  (0)
Plan length: 94 step(s).
Plan cost: 5061
Expanded 6169899 state(s).
Reopened 0 state(s).
Evaluated 6169900 state(s).
Evaluations: 12339800
Generated 29677613 state(s).
Dead ends: 0 state(s).
Number of registered states: 6169900
Int hash set load factor: 6169900/8388608 = 0.735509
Int hash set resizes: 23
Search time: 279.286s
Total time: 279.305s
Solution found.
Peak memory: 859408 KB

search exit code: 0
