INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/translate/translate.py domain.pddl ins.pddl --sas-file output.sas
Parsing...
Parsing: [0.070s CPU, 0.074s wall-clock]
Normalizing task... [0.010s CPU, 0.005s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.005s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.040s CPU, 0.042s wall-clock]
Preparing model... [0.020s CPU, 0.020s wall-clock]
Generated 1859 rules.
Computing model... [0.030s CPU, 0.032s wall-clock]
1122 relevant atoms
1695 auxiliary atoms
2817 final queue length
6148 total queue pushes
Completing instantiation... [0.040s CPU, 0.039s wall-clock]
Instantiating: [0.140s CPU, 0.140s wall-clock]
Computing fact groups...
Finding invariants...
121 initial candidates
Finding invariants: [1.950s CPU, 1.944s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
97 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [1.950s CPU, 1.948s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.003s wall-clock]
Translating task: [0.060s CPU, 0.058s wall-clock]
655 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
10 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.031s wall-clock]
Reordering and filtering variables...
107 of 110 variables necessary.
55 of 64 mutex groups necessary.
836 of 836 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 107
Translator derived variables: 0
Translator facts: 341
Translator goal facts: 1
Translator mutex groups: 55
Translator total mutex groups size: 192
Translator operators: 836
Translator axioms: 0
Translator task size: 6966
Translator peak memory: 87376 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [2.280s CPU, 2.277s wall-clock]

translate exit code: 0
INFO     Running search (release32).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
reading input... [t=1.8414e-05s]
done reading input! [t=0.00633902s]
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00492269s
Discovered 12 landmarks, of which 0 are disjunctive and 0 are conjunctive 
29 edges
Simplifying 2935 unary operators... done! [1531 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done! [t=0.0162404s]
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000188644s
Variables: 107
FactPairs: 341
Bytes per state: 20
Conducting lazy best first search, (real) bound = 2147483647
5 initial landmarks, 1 goal landmarks
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
New best heuristic value for ff(transform = adapt_costs(one)): 11
[g=0, 1 evaluated, 0 expanded, t=0.0163591s, 5152 KB]
Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
Initial heuristic value for ff(transform = adapt_costs(one)): 11
New best heuristic value for ff(transform = adapt_costs(one)): 9
[g=1, 2 evaluated, 1 expanded, t=0.0164661s, 5152 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 8
[g=2, 3 evaluated, 2 expanded, t=0.0165228s, 5152 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 7
[g=1, 7 evaluated, 5 expanded, t=0.0166908s, 5152 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
New best heuristic value for ff(transform = adapt_costs(one)): 6
[g=2, 8 evaluated, 6 expanded, t=0.0167461s, 5152 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 5
[g=21, 17754659 evaluated, 11945542 expanded, t=428.894s, 3183200 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 4
[g=22, 17754661 evaluated, 11945544 expanded, t=428.894s, 3183200 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 5
[g=24, 17754663 evaluated, 11945546 expanded, t=428.894s, 3183200 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 3
[g=56, 17755056 evaluated, 11945872 expanded, t=428.905s, 3183332 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 4
[g=58, 17755058 evaluated, 11945874 expanded, t=428.905s, 3183332 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 2
[g=66, 17755066 evaluated, 11945882 expanded, t=428.905s, 3183332 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
[g=67, 17755067 evaluated, 11945883 expanded, t=428.905s, 3183332 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
New best heuristic value for ff(transform = adapt_costs(one)): 1
[g=76, 17755076 evaluated, 11945892 expanded, t=428.905s, 3183332 KB]
Solution found!
Actual search time: 428.889s [t=428.905s]
program-inc-0 row-0 (1001)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
program-paint-1 row-0 (1001)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
program-inc-2 row-0 (1001)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
program-goto-last-cell-3-0 row-0 (1001)
eval-cond-last-cell-0-3 row-0 (1)
do-goto-0-3-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-last-cell-0-3 row-0 (1)
dont-goto-0-3-0 row-0 (1)
program-end-4 row-0 (1)
check-main-end-0-4 row-0 (0)
repeat-end-main-0-4 row-0 (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-last-cell-0-3 row-0 (1)
do-goto-0-3-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-last-cell-0-3 row-0 (1)
do-goto-0-3-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-last-cell-0-3 row-0 (1)
do-goto-0-3-0 row-0 (1)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-last-cell-0-3 row-0 (1)
dont-goto-0-3-0 row-0 (1)
check-main-end-1-4 row-0 (0)
repeat-end-main-1-4 row-0 (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-last-cell-0-3 row-0 (1)
dont-goto-0-3-0 row-0 (1)
check-main-end-2-4 row-0 (0)
repeat-end-main-2-4 row-0 (0)
check-inc-0-0 row-0 (0)
execute-inc-0-0 row-0 (1)
check-paint-0-1 row-0 (0)
execute-paint-0-1 row-0 (1)
check-inc-0-2 row-0 (0)
execute-inc-0-2 row-0 (1)
eval-cond-last-cell-0-3 row-0 (1)
dont-goto-0-3-0 row-0 (1)
check-main-end-3-4 row-0 (0)
skip-3  (0)
Plan length: 77 step(s).
Plan cost: 4045
Expanded 11945893 state(s).
Reopened 0 state(s).
Evaluated 17755077 state(s).
Evaluations: 29700971
Generated 131837347 state(s).
Dead ends: 5809183 state(s).
Number of registered states: 17755077
Int hash set load factor: 17755077/33554432 = 0.529143
Int hash set resizes: 25
Search time: 428.889s
Total time: 428.905s
Solution found.
Peak memory: 3183332 KB

search exit code: 0
