INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/translate/translate.py domain.pddl ins.pddl --sas-file output.sas
Parsing...
Parsing: [0.080s CPU, 0.082s wall-clock]
Normalizing task... [0.010s CPU, 0.006s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.004s wall-clock]
Normalizing Datalog program...
Unbound effect variables: Adding @object predicate.
Trivial rules: Converted to facts.
Normalizing Datalog program: [0.040s CPU, 0.042s wall-clock]
Preparing model... [0.020s CPU, 0.020s wall-clock]
Generated 1877 rules.
Computing model... [0.040s CPU, 0.036s wall-clock]
1384 relevant atoms
1860 auxiliary atoms
3244 final queue length
5736 total queue pushes
Completing instantiation... [0.050s CPU, 0.044s wall-clock]
Instantiating: [0.150s CPU, 0.150s wall-clock]
Computing fact groups...
Finding invariants...
191 initial candidates
Finding invariants: [25.120s CPU, 25.124s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
335 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [25.130s CPU, 25.130s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.005s wall-clock]
Translating task: [0.070s CPU, 0.069s wall-clock]
1021 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
88 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.023s wall-clock]
Reordering and filtering variables...
310 of 310 variables necessary.
55 of 63 mutex groups necessary.
875 of 875 operators necessary.
15 of 15 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.019s wall-clock]
Translator variables: 310
Translator derived variables: 15
Translator facts: 690
Translator goal facts: 1
Translator mutex groups: 55
Translator total mutex groups size: 158
Translator operators: 875
Translator axioms: 15
Translator task size: 8633
Translator peak memory: 206784 KB
Writing output... [0.010s CPU, 0.011s wall-clock]
Done! [25.500s CPU, 25.494s wall-clock]

translate exit code: 0
INFO     Running search (release32).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
reading input... [t=1.8655e-05s]
done reading input! [t=0.00810839s]
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00631801s
Discovered 14 landmarks, of which 0 are disjunctive and 0 are conjunctive 
32 edges
Simplifying 3613 unary operators... done! [2106 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done! [t=0.0186686s]
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000222785s
Variables: 310
FactPairs: 690
Bytes per state: 44
Conducting lazy best first search, (real) bound = 2147483647
7 initial landmarks, 1 goal landmarks
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
New best heuristic value for ff(transform = adapt_costs(one)): 11
[g=0, 1 evaluated, 0 expanded, t=0.0188111s, 5468 KB]
Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
Initial heuristic value for ff(transform = adapt_costs(one)): 11
New best heuristic value for ff(transform = adapt_costs(one)): 9
[g=1, 2 evaluated, 1 expanded, t=0.0189648s, 5468 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 8
[g=2, 3 evaluated, 2 expanded, t=0.0190579s, 5468 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 7
[g=3, 4 evaluated, 3 expanded, t=0.0191536s, 5468 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
New best heuristic value for ff(transform = adapt_costs(one)): 6
[g=2, 9 evaluated, 8 expanded, t=0.019533s, 5468 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 5
[g=7, 2363 evaluated, 2362 expanded, t=0.177334s, 6264 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 4
[g=8, 2364 evaluated, 2363 expanded, t=0.177446s, 6264 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 4
[g=9, 2365 evaluated, 2364 expanded, t=0.177522s, 6264 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 3
New best heuristic value for ff(transform = adapt_costs(one)): 3
[g=22, 3169 evaluated, 3168 expanded, t=0.223491s, 6264 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
New best heuristic value for ff(transform = adapt_costs(one)): 2
[g=30, 3177 evaluated, 3176 expanded, t=0.223963s, 6264 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
New best heuristic value for ff(transform = adapt_costs(one)): 1
[g=40, 3187 evaluated, 3186 expanded, t=0.224468s, 6264 KB]
Solution found!
Actual search time: 0.205781s [t=0.224518s]
program-unstack-0 row-0 (1001)
check-unstack-0-0 row-0 (0)
execute-unstack-0-0 row-0 (1)
program-collect-1 row-0 (1001)
check-collect-0-1 row-0 (0)
execute-collect-0-1 row-0 (1)
program-goto-obs-greenish-2-4 row-0 (1001)
eval-cond-obs-greenish-0-2 row-0 (1)
do-goto-0-2-4 row-0 (1)
program-end-4 row-0 (1)
check-main-end-0-4 row-0 (0)
repeat-end-main-0-4 row-0 (0)
check-unstack-0-0 row-0 (0)
execute-unstack-0-0 row-0 (1)
check-collect-0-1 row-0 (0)
execute-collect-0-1 row-0 (1)
eval-cond-obs-greenish-0-2 row-0 (1)
dont-goto-0-2-4 row-0 (1)
program-goto-clear-3-1 b1 row-0 (1001)
eval-cond-clear-0-3 b1 row-0 (1)
do-goto-0-3-1 row-0 (1)
check-collect-0-1 row-0 (0)
skip-1  (0)
check-unstack-0-0 row-0 (0)
execute-unstack-0-0 row-0 (1)
check-collect-0-1 row-0 (0)
execute-collect-0-1 row-0 (1)
eval-cond-obs-greenish-0-2 row-0 (1)
do-goto-0-2-4 row-0 (1)
check-main-end-2-4 row-0 (0)
skip-2  (0)
check-unstack-0-0 row-0 (0)
execute-unstack-0-0 row-0 (1)
check-collect-0-1 row-0 (0)
execute-collect-0-1 row-0 (1)
eval-cond-obs-greenish-0-2 row-0 (1)
dont-goto-0-2-4 row-0 (1)
eval-cond-clear-0-3 b1 row-0 (1)
do-goto-0-3-1 row-0 (1)
check-collect-0-1 row-0 (0)
skip-3  (0)
Plan length: 41 step(s).
Plan cost: 4025
Expanded 3187 state(s).
Reopened 0 state(s).
Evaluated 3188 state(s).
Evaluations: 6376
Generated 55832 state(s).
Dead ends: 0 state(s).
Number of registered states: 3188
Int hash set load factor: 3188/4096 = 0.77832
Int hash set resizes: 12
Search time: 0.205793s
Total time: 0.224521s
Solution found.
Peak memory: 6264 KB

search exit code: 0
