INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/translate/translate.py domain.pddl ins.pddl --sas-file output.sas
Parsing...
Parsing: [0.110s CPU, 0.115s wall-clock]
Normalizing task... [0.010s CPU, 0.007s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.005s wall-clock]
Normalizing Datalog program...
Unbound effect variables: Adding @object predicate.
Trivial rules: Converted to facts.
Normalizing Datalog program: [0.050s CPU, 0.044s wall-clock]
Preparing model... [0.030s CPU, 0.029s wall-clock]
Generated 2039 rules.
Computing model... [0.030s CPU, 0.031s wall-clock]
1753 relevant atoms
2178 auxiliary atoms
3931 final queue length
7578 total queue pushes
Completing instantiation... [0.070s CPU, 0.071s wall-clock]
Instantiating: [0.180s CPU, 0.184s wall-clock]
Computing fact groups...
Finding invariants...
192 initial candidates
Finding invariants: [34.110s CPU, 34.113s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
416 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.002s wall-clock]
Computing fact groups: [34.120s CPU, 34.120s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.006s wall-clock]
Translating task: [0.120s CPU, 0.117s wall-clock]
2544 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
101 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.033s wall-clock]
Reordering and filtering variables...
384 of 384 variables necessary.
55 of 62 mutex groups necessary.
1128 of 1128 operators necessary.
15 of 15 axiom rules necessary.
Reordering and filtering variables: [0.030s CPU, 0.026s wall-clock]
Translator variables: 384
Translator derived variables: 15
Translator facts: 854
Translator goal facts: 1
Translator mutex groups: 55
Translator total mutex groups size: 170
Translator operators: 1128
Translator axioms: 15
Translator task size: 12458
Translator peak memory: 209800 KB
Writing output... [0.020s CPU, 0.015s wall-clock]
Done! [34.620s CPU, 34.623s wall-clock]

translate exit code: 0
INFO     Running search (release32).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
reading input... [t=1.8978e-05s]
done reading input! [t=0.0114731s]
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.0127765s
Discovered 17 landmarks, of which 0 are disjunctive and 0 are conjunctive 
43 edges
Simplifying 5973 unary operators... done! [3998 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done! [t=0.0301001s]
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000286696s
Variables: 384
FactPairs: 854
Bytes per state: 56
Conducting lazy best first search, (real) bound = 2147483647
9 initial landmarks, 1 goal landmarks
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
New best heuristic value for ff(transform = adapt_costs(one)): 12
[g=0, 1 evaluated, 0 expanded, t=0.0302803s, 5776 KB]
Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
Initial heuristic value for ff(transform = adapt_costs(one)): 12
New best heuristic value for ff(transform = adapt_costs(one)): 8
[g=1, 2 evaluated, 1 expanded, t=0.0304782s, 5776 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
New best heuristic value for ff(transform = adapt_costs(one)): 7
[g=2, 3 evaluated, 2 expanded, t=0.0306051s, 5776 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 6
[g=13, 2970 evaluated, 2969 expanded, t=0.303604s, 7100 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 5
[g=14, 2971 evaluated, 2970 expanded, t=0.303742s, 7100 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
[g=16, 2973 evaluated, 2972 expanded, t=0.303928s, 7100 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 4
[g=48, 7936 evaluated, 7935 expanded, t=0.703939s, 9080 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 5
[g=50, 7938 evaluated, 7937 expanded, t=0.704144s, 9080 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 3
[g=70, 7958 evaluated, 7957 expanded, t=0.705784s, 9080 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 3
[g=71, 7959 evaluated, 7958 expanded, t=0.705877s, 9080 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
New best heuristic value for ff(transform = adapt_costs(one)): 2
[g=98, 7986 evaluated, 7985 expanded, t=0.707887s, 9080 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
New best heuristic value for ff(transform = adapt_costs(one)): 1
[g=120, 8008 evaluated, 8007 expanded, t=0.709419s, 9080 KB]
Solution found!
Actual search time: 0.679303s [t=0.709475s]
program-drop-0 row-0 (1001)
check-drop-0-0 row-0 (0)
execute-drop-0-0 row-0 (1)
program-unstack-1 row-0 (1001)
check-unstack-0-1 row-0 (0)
execute-unstack-0-1 row-0 (1)
program-goto-holding-greenish-2-0 row-0 (1001)
eval-cond-holding-greenish-0-2 row-0 (1)
do-goto-0-2-0 row-0 (1)
check-drop-0-0 row-0 (0)
execute-drop-0-0 row-0 (1)
check-unstack-0-1 row-0 (0)
execute-unstack-0-1 row-0 (1)
eval-cond-holding-greenish-0-2 row-0 (1)
dont-goto-0-2-0 row-0 (1)
program-collect-3 row-0 (1001)
check-collect-0-3 row-0 (0)
execute-collect-0-3 row-0 (1)
program-end-4 row-0 (1)
check-main-end-0-4 row-0 (0)
repeat-end-main-0-4 row-0 (0)
check-drop-0-0 row-0 (0)
execute-drop-0-0 row-0 (1)
check-unstack-0-1 row-0 (0)
execute-unstack-0-1 row-0 (1)
eval-cond-holding-greenish-0-2 row-0 (1)
do-goto-0-2-0 row-0 (1)
check-drop-0-0 row-0 (0)
execute-drop-0-0 row-0 (1)
check-unstack-0-1 row-0 (0)
execute-unstack-0-1 row-0 (1)
eval-cond-holding-greenish-0-2 row-0 (1)
do-goto-0-2-0 row-0 (1)
check-drop-0-0 row-0 (0)
execute-drop-0-0 row-0 (1)
check-unstack-0-1 row-0 (0)
execute-unstack-0-1 row-0 (1)
eval-cond-holding-greenish-0-2 row-0 (1)
do-goto-0-2-0 row-0 (1)
check-drop-0-0 row-0 (0)
execute-drop-0-0 row-0 (1)
check-unstack-0-1 row-0 (0)
execute-unstack-0-1 row-0 (1)
eval-cond-holding-greenish-0-2 row-0 (1)
dont-goto-0-2-0 row-0 (1)
check-collect-0-3 row-0 (0)
execute-collect-0-3 row-0 (1)
check-main-end-1-4 row-0 (0)
repeat-end-main-1-4 row-0 (0)
check-drop-0-0 row-0 (0)
execute-drop-0-0 row-0 (1)
check-unstack-0-1 row-0 (0)
execute-unstack-0-1 row-0 (1)
eval-cond-holding-greenish-0-2 row-0 (1)
do-goto-0-2-0 row-0 (1)
check-drop-0-0 row-0 (0)
execute-drop-0-0 row-0 (1)
check-unstack-0-1 row-0 (0)
execute-unstack-0-1 row-0 (1)
eval-cond-holding-greenish-0-2 row-0 (1)
do-goto-0-2-0 row-0 (1)
check-drop-0-0 row-0 (0)
execute-drop-0-0 row-0 (1)
check-unstack-0-1 row-0 (0)
execute-unstack-0-1 row-0 (1)
eval-cond-holding-greenish-0-2 row-0 (1)
dont-goto-0-2-0 row-0 (1)
check-collect-0-3 row-0 (0)
execute-collect-0-3 row-0 (1)
check-main-end-2-4 row-0 (0)
repeat-end-main-2-4 row-0 (0)
check-drop-0-0 row-0 (0)
execute-drop-0-0 row-0 (1)
check-unstack-0-1 row-0 (0)
execute-unstack-0-1 row-0 (1)
eval-cond-holding-greenish-0-2 row-0 (1)
do-goto-0-2-0 row-0 (1)
check-drop-0-0 row-0 (0)
execute-drop-0-0 row-0 (1)
check-unstack-0-1 row-0 (0)
execute-unstack-0-1 row-0 (1)
eval-cond-holding-greenish-0-2 row-0 (1)
do-goto-0-2-0 row-0 (1)
check-drop-0-0 row-0 (0)
execute-drop-0-0 row-0 (1)
check-unstack-0-1 row-0 (0)
execute-unstack-0-1 row-0 (1)
eval-cond-holding-greenish-0-2 row-0 (1)
do-goto-0-2-0 row-0 (1)
check-drop-0-0 row-0 (0)
execute-drop-0-0 row-0 (1)
check-unstack-0-1 row-0 (0)
execute-unstack-0-1 row-0 (1)
eval-cond-holding-greenish-0-2 row-0 (1)
dont-goto-0-2-0 row-0 (1)
check-collect-0-3 row-0 (0)
execute-collect-0-3 row-0 (1)
check-main-end-3-4 row-0 (0)
skip-3  (0)
check-drop-0-0 row-0 (0)
execute-drop-0-0 row-0 (1)
check-unstack-0-1 row-0 (0)
execute-unstack-0-1 row-0 (1)
eval-cond-holding-greenish-0-2 row-0 (1)
do-goto-0-2-0 row-0 (1)
check-drop-0-0 row-0 (0)
execute-drop-0-0 row-0 (1)
check-unstack-0-1 row-0 (0)
execute-unstack-0-1 row-0 (1)
eval-cond-holding-greenish-0-2 row-0 (1)
do-goto-0-2-0 row-0 (1)
check-drop-0-0 row-0 (0)
execute-drop-0-0 row-0 (1)
check-unstack-0-1 row-0 (0)
execute-unstack-0-1 row-0 (1)
eval-cond-holding-greenish-0-2 row-0 (1)
dont-goto-0-2-0 row-0 (1)
check-collect-0-3 row-0 (0)
execute-collect-0-3 row-0 (1)
check-main-end-4-4 row-0 (0)
skip-4  (0)
Plan length: 121 step(s).
Plan cost: 4074
Expanded 8008 state(s).
Reopened 0 state(s).
Evaluated 8009 state(s).
Evaluations: 16018
Generated 180348 state(s).
Dead ends: 0 state(s).
Number of registered states: 8009
Int hash set load factor: 8009/16384 = 0.488831
Int hash set resizes: 14
Search time: 0.679315s
Total time: 0.709477s
Solution found.
Peak memory: 9080 KB

search exit code: 0
