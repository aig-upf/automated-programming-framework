INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/translate/translate.py domain.pddl ins.pddl --sas-file output.sas
Parsing...
Parsing: [0.070s CPU, 0.065s wall-clock]
Normalizing task... [0.010s CPU, 0.005s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.004s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.040s CPU, 0.039s wall-clock]
Preparing model... [0.020s CPU, 0.018s wall-clock]
Generated 1695 rules.
Computing model... [0.020s CPU, 0.019s wall-clock]
892 relevant atoms
1460 auxiliary atoms
2352 final queue length
4008 total queue pushes
Completing instantiation... [0.030s CPU, 0.031s wall-clock]
Instantiating: [0.110s CPU, 0.115s wall-clock]
Computing fact groups...
Finding invariants...
134 initial candidates
Finding invariants: [2.150s CPU, 2.147s wall-clock]
Checking invariant weight... [0.000s CPU, 0.001s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
144 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [2.150s CPU, 2.151s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.003s wall-clock]
Translating task: [0.050s CPU, 0.045s wall-clock]
290 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
6 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.025s wall-clock]
Reordering and filtering variables...
157 of 160 variables necessary.
55 of 62 mutex groups necessary.
659 of 659 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 157
Translator derived variables: 0
Translator facts: 367
Translator goal facts: 1
Translator mutex groups: 55
Translator total mutex groups size: 146
Translator operators: 659
Translator axioms: 0
Translator task size: 5362
Translator peak memory: 93096 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [2.430s CPU, 2.424s wall-clock]

translate exit code: 0
INFO     Running search (release32).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
reading input... [t=1.9169e-05s]
done reading input! [t=0.00526622s]
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00293947s
Discovered 11 landmarks, of which 0 are disjunctive and 0 are conjunctive 
21 edges
Simplifying 2064 unary operators... done! [961 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done! [t=0.0109328s]
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000169053s
Variables: 157
FactPairs: 367
Bytes per state: 24
Conducting lazy best first search, (real) bound = 2147483647
5 initial landmarks, 1 goal landmarks
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
New best heuristic value for ff(transform = adapt_costs(one)): 10
[g=0, 1 evaluated, 0 expanded, t=0.0110398s, 5016 KB]
Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
Initial heuristic value for ff(transform = adapt_costs(one)): 10
New best heuristic value for ff(transform = adapt_costs(one)): 8
[g=1, 2 evaluated, 1 expanded, t=0.0111378s, 5016 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 7
[g=2, 3 evaluated, 2 expanded, t=0.0111895s, 5016 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 6
[g=1, 7 evaluated, 5 expanded, t=0.0113436s, 5016 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 5
New best heuristic value for ff(transform = adapt_costs(one)): 5
[g=2, 8 evaluated, 6 expanded, t=0.0113939s, 5016 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 4
[g=7, 1843 evaluated, 1276 expanded, t=0.0568565s, 5396 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 3
[g=8, 1844 evaluated, 1277 expanded, t=0.0569071s, 5396 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 3
[g=9, 1845 evaluated, 1278 expanded, t=0.0569479s, 5396 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
New best heuristic value for ff(transform = adapt_costs(one)): 2
[g=14, 1850 evaluated, 1283 expanded, t=0.0570585s, 5396 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
New best heuristic value for ff(transform = adapt_costs(one)): 1
[g=30, 2483 evaluated, 1826 expanded, t=0.0691518s, 5528 KB]
Solution found!
Actual search time: 0.0581957s [t=0.0691929s]
program-unstack-0 row-0 (1001)
check-unstack-0-0 row-0 (0)
execute-unstack-0-0 row-0 (1)
program-collect-1 row-0 (1001)
check-collect-0-1 row-0 (0)
execute-collect-0-1 row-0 (1)
program-goto-obs-greenish-2-4 row-0 (1001)
eval-cond-obs-greenish-0-2 row-0 (1)
do-goto-0-2-4 row-0 (1)
program-end-4 row-0 (1)
check-main-end-0-4 row-0 (0)
repeat-end-main-0-4 row-0 (0)
check-unstack-0-0 row-0 (0)
execute-unstack-0-0 row-0 (1)
check-collect-0-1 row-0 (0)
execute-collect-0-1 row-0 (1)
eval-cond-obs-greenish-0-2 row-0 (1)
do-goto-0-2-4 row-0 (1)
check-main-end-1-4 row-0 (0)
skip-1  (0)
check-unstack-0-0 row-0 (0)
execute-unstack-0-0 row-0 (1)
check-collect-0-1 row-0 (0)
execute-collect-0-1 row-0 (1)
eval-cond-obs-greenish-0-2 row-0 (1)
dont-goto-0-2-4 row-0 (1)
program-goto-clear-3-1 b1 row-0 (1001)
eval-cond-clear-0-3 b1 row-0 (1)
do-goto-0-3-1 row-0 (1)
check-collect-0-1 row-0 (0)
skip-2  (0)
Plan length: 31 step(s).
Plan cost: 4019
Expanded 1827 state(s).
Reopened 0 state(s).
Evaluated 2484 state(s).
Evaluations: 4312
Generated 34389 state(s).
Dead ends: 656 state(s).
Number of registered states: 2484
Int hash set load factor: 2484/4096 = 0.606445
Int hash set resizes: 12
Search time: 0.0582129s
Total time: 0.0691953s
Solution found.
Peak memory: 5528 KB

search exit code: 0
