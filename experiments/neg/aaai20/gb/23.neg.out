INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/translate/translate.py domain.pddl ins.pddl --sas-file output.sas
Parsing...
Parsing: [0.090s CPU, 0.087s wall-clock]
Normalizing task... [0.000s CPU, 0.006s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.005s wall-clock]
Normalizing Datalog program...
Unbound effect variables: Adding @object predicate.
Trivial rules: Converted to facts.
Normalizing Datalog program: [0.040s CPU, 0.044s wall-clock]
Preparing model... [0.020s CPU, 0.023s wall-clock]
Generated 1952 rules.
Computing model... [0.040s CPU, 0.035s wall-clock]
1392 relevant atoms
1890 auxiliary atoms
3282 final queue length
5879 total queue pushes
Completing instantiation... [0.050s CPU, 0.045s wall-clock]
Instantiating: [0.160s CPU, 0.155s wall-clock]
Computing fact groups...
Finding invariants...
192 initial candidates
Finding invariants: [28.640s CPU, 28.642s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
338 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [28.650s CPU, 28.648s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.004s wall-clock]
Translating task: [0.070s CPU, 0.070s wall-clock]
1152 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
87 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.023s wall-clock]
Reordering and filtering variables...
313 of 313 variables necessary.
55 of 63 mutex groups necessary.
880 of 880 operators necessary.
15 of 15 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.018s wall-clock]
Translator variables: 313
Translator derived variables: 15
Translator facts: 697
Translator goal facts: 1
Translator mutex groups: 55
Translator total mutex groups size: 158
Translator operators: 880
Translator axioms: 15
Translator task size: 9078
Translator peak memory: 207084 KB
Writing output... [0.010s CPU, 0.011s wall-clock]
Done! [29.020s CPU, 29.024s wall-clock]

translate exit code: 0
INFO     Running search (release32).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
reading input... [t=1.8893e-05s]
done reading input! [t=0.00838594s]
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00939896s
Discovered 16 landmarks, of which 0 are disjunctive and 0 are conjunctive 
41 edges
Simplifying 3818 unary operators... done! [2311 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done! [t=0.0222852s]
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000226797s
Variables: 313
FactPairs: 697
Bytes per state: 44
Conducting lazy best first search, (real) bound = 2147483647
8 initial landmarks, 1 goal landmarks
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
New best heuristic value for ff(transform = adapt_costs(one)): 12
[g=0, 1 evaluated, 0 expanded, t=0.02243s, 5372 KB]
Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
Initial heuristic value for ff(transform = adapt_costs(one)): 12
New best heuristic value for ff(transform = adapt_costs(one)): 10
[g=1, 2 evaluated, 1 expanded, t=0.0225868s, 5372 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 9
[g=2, 3 evaluated, 2 expanded, t=0.022683s, 5372 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 8
[g=3, 4 evaluated, 3 expanded, t=0.0227833s, 5372 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
New best heuristic value for ff(transform = adapt_costs(one)): 7
[g=2, 9 evaluated, 8 expanded, t=0.0231782s, 5372 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 6
[g=7, 2363 evaluated, 2362 expanded, t=0.181673s, 6168 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 5
[g=8, 2364 evaluated, 2363 expanded, t=0.181779s, 6168 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 5
[g=9, 2365 evaluated, 2364 expanded, t=0.181854s, 6168 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 4
New best heuristic value for ff(transform = adapt_costs(one)): 4
[g=14, 2370 evaluated, 2369 expanded, t=0.182147s, 6168 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 3
New best heuristic value for ff(transform = adapt_costs(one)): 3
[g=20, 2376 evaluated, 2375 expanded, t=0.182484s, 6300 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
New best heuristic value for ff(transform = adapt_costs(one)): 2
[g=26, 2382 evaluated, 2381 expanded, t=0.182812s, 6300 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
New best heuristic value for ff(transform = adapt_costs(one)): 1
[g=32, 2388 evaluated, 2387 expanded, t=0.183102s, 6300 KB]
Solution found!
Actual search time: 0.160794s [t=0.183148s]
program-unstack-0 row-0 (1001)
check-unstack-0-0 row-0 (0)
execute-unstack-0-0 row-0 (1)
program-collect-1 row-0 (1001)
check-collect-0-1 row-0 (0)
execute-collect-0-1 row-0 (1)
program-end-2 row-0 (1)
check-main-end-0-2 row-0 (0)
repeat-end-main-0-2 row-0 (0)
check-unstack-0-0 row-0 (0)
execute-unstack-0-0 row-0 (1)
check-collect-0-1 row-0 (0)
execute-collect-0-1 row-0 (1)
check-main-end-1-2 row-0 (0)
skip-1  (0)
check-unstack-0-0 row-0 (0)
execute-unstack-0-0 row-0 (1)
check-collect-0-1 row-0 (0)
execute-collect-0-1 row-0 (1)
check-main-end-2-2 row-0 (0)
skip-2  (0)
check-unstack-0-0 row-0 (0)
execute-unstack-0-0 row-0 (1)
check-collect-0-1 row-0 (0)
execute-collect-0-1 row-0 (1)
check-main-end-3-2 row-0 (0)
skip-3  (0)
check-unstack-0-0 row-0 (0)
execute-unstack-0-0 row-0 (1)
check-collect-0-1 row-0 (0)
execute-collect-0-1 row-0 (1)
check-main-end-4-2 row-0 (0)
skip-4  (0)
Plan length: 33 step(s).
Plan cost: 2013
Expanded 2388 state(s).
Reopened 0 state(s).
Evaluated 2389 state(s).
Evaluations: 4778
Generated 52949 state(s).
Dead ends: 0 state(s).
Number of registered states: 2389
Int hash set load factor: 2389/4096 = 0.583252
Int hash set resizes: 12
Search time: 0.160806s
Total time: 0.183151s
Solution found.
Peak memory: 6300 KB

search exit code: 0
