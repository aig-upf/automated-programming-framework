INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/translate/translate.py domain.pddl ins.pddl --sas-file output.sas
Parsing...
Parsing: [0.110s CPU, 0.111s wall-clock]
Normalizing task... [0.010s CPU, 0.007s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.005s wall-clock]
Normalizing Datalog program...
Unbound effect variables: Adding @object predicate.
Trivial rules: Converted to facts.
Normalizing Datalog program: [0.050s CPU, 0.044s wall-clock]
Preparing model... [0.030s CPU, 0.029s wall-clock]
Generated 2038 rules.
Computing model... [0.030s CPU, 0.028s wall-clock]
1400 relevant atoms
1898 auxiliary atoms
3298 final queue length
5965 total queue pushes
Completing instantiation... [0.060s CPU, 0.057s wall-clock]
Instantiating: [0.170s CPU, 0.167s wall-clock]
Computing fact groups...
Finding invariants...
192 initial candidates
Finding invariants: [37.810s CPU, 37.812s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
339 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [37.810s CPU, 37.819s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.005s wall-clock]
Translating task: [0.090s CPU, 0.089s wall-clock]
2113 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
87 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.043s wall-clock]
Reordering and filtering variables...
314 of 314 variables necessary.
55 of 62 mutex groups necessary.
888 of 888 operators necessary.
15 of 15 axiom rules necessary.
Reordering and filtering variables: [0.040s CPU, 0.022s wall-clock]
Translator variables: 314
Translator derived variables: 15
Translator facts: 698
Translator goal facts: 1
Translator mutex groups: 55
Translator total mutex groups size: 158
Translator operators: 888
Translator axioms: 15
Translator task size: 10173
Translator peak memory: 208412 KB
Writing output... [0.010s CPU, 0.013s wall-clock]
Done! [38.280s CPU, 38.276s wall-clock]

translate exit code: 0
INFO     Running search (release32).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
reading input... [t=1.9217e-05s]
done reading input! [t=0.00983447s]
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00855092s
Discovered 17 landmarks, of which 0 are disjunctive and 0 are conjunctive 
41 edges
Simplifying 4855 unary operators... done! [3348 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done! [t=0.0237279s]
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000247835s
Variables: 314
FactPairs: 698
Bytes per state: 44
Conducting lazy best first search, (real) bound = 2147483647
9 initial landmarks, 1 goal landmarks
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
New best heuristic value for ff(transform = adapt_costs(one)): 12
[g=0, 1 evaluated, 0 expanded, t=0.0239026s, 5796 KB]
Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
Initial heuristic value for ff(transform = adapt_costs(one)): 12
New best heuristic value for ff(transform = adapt_costs(one)): 8
[g=1, 2 evaluated, 1 expanded, t=0.0240795s, 5796 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
New best heuristic value for ff(transform = adapt_costs(one)): 7
[g=2, 3 evaluated, 2 expanded, t=0.0241959s, 5796 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 6
[g=7, 2231 evaluated, 2230 expanded, t=0.205407s, 6324 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 5
[g=8, 2232 evaluated, 2231 expanded, t=0.205527s, 6324 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
[g=10, 2234 evaluated, 2233 expanded, t=0.205694s, 6324 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 4
[g=30, 262855 evaluated, 262854 expanded, t=18.0746s, 85412 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 5
[g=32, 262857 evaluated, 262856 expanded, t=18.0748s, 85412 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 3
[g=58, 262885 evaluated, 262884 expanded, t=18.0769s, 85412 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 3
[g=59, 262886 evaluated, 262885 expanded, t=18.077s, 85412 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
New best heuristic value for ff(transform = adapt_costs(one)): 2
[g=68, 262895 evaluated, 262894 expanded, t=18.0776s, 85412 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
New best heuristic value for ff(transform = adapt_costs(one)): 1
[g=84, 262911 evaluated, 262910 expanded, t=18.0786s, 85412 KB]
Solution found!
Actual search time: 18.0549s [t=18.0787s]
program-drop-0 row-0 (1001)
check-drop-0-0 row-0 (0)
execute-drop-0-0 row-0 (1)
program-unstack-1 row-0 (1001)
check-unstack-0-1 row-0 (0)
execute-unstack-0-1 row-0 (1)
program-goto-holding-greenish-2-0 row-0 (1001)
eval-cond-holding-greenish-0-2 row-0 (1)
dont-goto-0-2-0 row-0 (1)
program-collect-3 row-0 (1001)
check-collect-0-3 row-0 (0)
execute-collect-0-3 row-0 (1)
program-end-4 row-0 (1)
check-main-end-0-4 row-0 (0)
repeat-end-main-0-4 row-0 (0)
check-drop-0-0 row-0 (0)
execute-drop-0-0 row-0 (1)
check-unstack-0-1 row-0 (0)
execute-unstack-0-1 row-0 (1)
eval-cond-holding-greenish-0-2 row-0 (1)
do-goto-0-2-0 row-0 (1)
check-drop-0-0 row-0 (0)
execute-drop-0-0 row-0 (1)
check-unstack-0-1 row-0 (0)
execute-unstack-0-1 row-0 (1)
eval-cond-holding-greenish-0-2 row-0 (1)
dont-goto-0-2-0 row-0 (1)
check-collect-0-3 row-0 (0)
execute-collect-0-3 row-0 (1)
check-main-end-1-4 row-0 (0)
repeat-end-main-1-4 row-0 (0)
check-drop-0-0 row-0 (0)
execute-drop-0-0 row-0 (1)
check-unstack-0-1 row-0 (0)
execute-unstack-0-1 row-0 (1)
eval-cond-holding-greenish-0-2 row-0 (1)
do-goto-0-2-0 row-0 (1)
check-drop-0-0 row-0 (0)
execute-drop-0-0 row-0 (1)
check-unstack-0-1 row-0 (0)
execute-unstack-0-1 row-0 (1)
eval-cond-holding-greenish-0-2 row-0 (1)
do-goto-0-2-0 row-0 (1)
check-drop-0-0 row-0 (0)
execute-drop-0-0 row-0 (1)
check-unstack-0-1 row-0 (0)
execute-unstack-0-1 row-0 (1)
eval-cond-holding-greenish-0-2 row-0 (1)
do-goto-0-2-0 row-0 (1)
check-drop-0-0 row-0 (0)
execute-drop-0-0 row-0 (1)
check-unstack-0-1 row-0 (0)
execute-unstack-0-1 row-0 (1)
eval-cond-holding-greenish-0-2 row-0 (1)
dont-goto-0-2-0 row-0 (1)
check-collect-0-3 row-0 (0)
execute-collect-0-3 row-0 (1)
check-main-end-2-4 row-0 (0)
repeat-end-main-2-4 row-0 (0)
check-drop-0-0 row-0 (0)
execute-drop-0-0 row-0 (1)
check-unstack-0-1 row-0 (0)
execute-unstack-0-1 row-0 (1)
eval-cond-holding-greenish-0-2 row-0 (1)
dont-goto-0-2-0 row-0 (1)
check-collect-0-3 row-0 (0)
execute-collect-0-3 row-0 (1)
check-main-end-3-4 row-0 (0)
skip-3  (0)
check-drop-0-0 row-0 (0)
execute-drop-0-0 row-0 (1)
check-unstack-0-1 row-0 (0)
execute-unstack-0-1 row-0 (1)
eval-cond-holding-greenish-0-2 row-0 (1)
do-goto-0-2-0 row-0 (1)
check-drop-0-0 row-0 (0)
execute-drop-0-0 row-0 (1)
check-unstack-0-1 row-0 (0)
execute-unstack-0-1 row-0 (1)
eval-cond-holding-greenish-0-2 row-0 (1)
dont-goto-0-2-0 row-0 (1)
check-collect-0-3 row-0 (0)
execute-collect-0-3 row-0 (1)
check-main-end-4-4 row-0 (0)
skip-4  (0)
Plan length: 85 step(s).
Plan cost: 4050
Expanded 262911 state(s).
Reopened 0 state(s).
Evaluated 262912 state(s).
Evaluations: 525824
Generated 3498307 state(s).
Dead ends: 0 state(s).
Number of registered states: 262912
Int hash set load factor: 262912/524288 = 0.501465
Int hash set resizes: 19
Search time: 18.0549s
Total time: 18.0787s
Solution found.
Peak memory: 85412 KB

search exit code: 0
