INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/translate/translate.py domain.pddl ins.pddl --sas-file output.sas
Parsing...
Parsing: [0.030s CPU, 0.036s wall-clock]
Normalizing task... [0.010s CPU, 0.002s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.002s wall-clock]
Normalizing Datalog program...
Unbound effect variables: Adding @object predicate.
Trivial rules: Converted to facts.
Normalizing Datalog program: [0.010s CPU, 0.016s wall-clock]
Preparing model... [0.020s CPU, 0.008s wall-clock]
Generated 754 rules.
Computing model... [0.010s CPU, 0.008s wall-clock]
504 relevant atoms
624 auxiliary atoms
1128 final queue length
1895 total queue pushes
Completing instantiation... [0.010s CPU, 0.013s wall-clock]
Instantiating: [0.050s CPU, 0.047s wall-clock]
Computing fact groups...
Finding invariants...
116 initial candidates
Finding invariants: [19.510s CPU, 19.514s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
181 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [19.510s CPU, 19.517s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.020s CPU, 0.021s wall-clock]
583 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
76 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.007s wall-clock]
Reordering and filtering variables...
155 of 155 variables necessary.
23 of 29 mutex groups necessary.
195 of 195 operators necessary.
10 of 10 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 155
Translator derived variables: 10
Translator facts: 350
Translator goal facts: 1
Translator mutex groups: 23
Translator total mutex groups size: 70
Translator operators: 195
Translator axioms: 10
Translator task size: 3198
Translator peak memory: 202704 KB
Writing output... [0.010s CPU, 0.003s wall-clock]
Done! [19.650s CPU, 19.644s wall-clock]

translate exit code: 0
INFO     Running search (release32).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
reading input... [t=2.1508e-05s]
done reading input! [t=0.00286144s]
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00262386s
Discovered 13 landmarks, of which 0 are disjunctive and 0 are conjunctive 
27 edges
Simplifying 1293 unary operators... done! [1084 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done! [t=0.00758196s]
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 7.2408e-05s
Variables: 155
FactPairs: 350
Bytes per state: 24
Conducting lazy best first search, (real) bound = 2147483647
7 initial landmarks, 1 goal landmarks
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
New best heuristic value for ff(transform = adapt_costs(one)): 10
[g=0, 1 evaluated, 0 expanded, t=0.00769088s, 4928 KB]
Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
Initial heuristic value for ff(transform = adapt_costs(one)): 10
New best heuristic value for ff(transform = adapt_costs(one)): 8
[g=1, 2 evaluated, 1 expanded, t=0.00776932s, 4928 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 7
[g=2, 3 evaluated, 2 expanded, t=0.00782624s, 4928 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 6
[g=3, 4 evaluated, 3 expanded, t=0.00788434s, 4928 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 5
New best heuristic value for ff(transform = adapt_costs(one)): 5
[g=2, 9 evaluated, 8 expanded, t=0.00807607s, 4928 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 4
[g=4, 13 evaluated, 12 expanded, t=0.00826508s, 4928 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 3
[g=5, 14 evaluated, 13 expanded, t=0.00831751s, 4928 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 3
[g=6, 15 evaluated, 14 expanded, t=0.00836403s, 4928 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
New best heuristic value for ff(transform = adapt_costs(one)): 2
[g=9, 18 evaluated, 17 expanded, t=0.00846953s, 4928 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
New best heuristic value for ff(transform = adapt_costs(one)): 1
[g=13, 22 evaluated, 21 expanded, t=0.00858175s, 4928 KB]
Solution found!
Actual search time: 0.000974493s [t=0.00861514s]
program-visit-node-0 row-0 (1001)
check-visit-node-0-0 row-0 (0)
execute-visit-node-0-0 row-0 (1)
program-end-1 row-0 (1)
check-main-end-0-1 row-0 (0)
repeat-end-main-0-1 row-0 (0)
check-visit-node-0-0 row-0 (0)
execute-visit-node-0-0 row-0 (1)
check-main-end-1-1 row-0 (0)
skip-1  (0)
check-visit-node-0-0 row-0 (0)
execute-visit-node-0-0 row-0 (1)
check-main-end-2-1 row-0 (0)
skip-2  (0)
Plan length: 14 step(s).
Plan cost: 1005
Expanded 22 state(s).
Reopened 0 state(s).
Evaluated 23 state(s).
Evaluations: 46
Generated 160 state(s).
Dead ends: 0 state(s).
Number of registered states: 23
Int hash set load factor: 23/32 = 0.71875
Int hash set resizes: 5
Search time: 0.000985783s
Total time: 0.00861753s
Solution found.
Peak memory: 4928 KB

search exit code: 0
