INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/translate/translate.py domain.pddl ins.pddl --sas-file output.sas
Parsing...
Parsing: [0.030s CPU, 0.033s wall-clock]
Normalizing task... [0.010s CPU, 0.002s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.002s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.020s CPU, 0.019s wall-clock]
Preparing model... [0.000s CPU, 0.008s wall-clock]
Generated 781 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
417 relevant atoms
624 auxiliary atoms
1041 final queue length
2237 total queue pushes
Completing instantiation... [0.020s CPU, 0.012s wall-clock]
Instantiating: [0.050s CPU, 0.051s wall-clock]
Computing fact groups...
Finding invariants...
76 initial candidates
Finding invariants: [1.050s CPU, 1.047s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
65 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [1.050s CPU, 1.049s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.020s wall-clock]
303 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
6 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.007s wall-clock]
Reordering and filtering variables...
72 of 74 variables necessary.
23 of 31 mutex groups necessary.
254 of 254 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.004s wall-clock]
Translator variables: 72
Translator derived variables: 0
Translator facts: 204
Translator goal facts: 1
Translator mutex groups: 23
Translator total mutex groups size: 82
Translator operators: 254
Translator axioms: 0
Translator task size: 2791
Translator peak memory: 72228 KB
Writing output... [0.000s CPU, 0.003s wall-clock]
Done! [1.170s CPU, 1.171s wall-clock]

translate exit code: 0
INFO     Running search (release32).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
reading input... [t=1.8337e-05s]
done reading input! [t=0.00255479s]
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00204762s
Discovered 13 landmarks, of which 0 are disjunctive and 0 are conjunctive 
40 edges
Simplifying 1045 unary operators... done! [758 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done! [t=0.00665958s]
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 8.271e-05s
Variables: 72
FactPairs: 204
Bytes per state: 12
Conducting lazy best first search, (real) bound = 2147483647
5 initial landmarks, 1 goal landmarks
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
New best heuristic value for ff(transform = adapt_costs(one)): 12
[g=0, 1 evaluated, 0 expanded, t=0.00675689s, 4652 KB]
Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
Initial heuristic value for ff(transform = adapt_costs(one)): 12
New best heuristic value for ff(transform = adapt_costs(one)): 10
[g=1, 2 evaluated, 1 expanded, t=0.00682752s, 4652 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 9
[g=2, 3 evaluated, 2 expanded, t=0.00686946s, 4652 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 8
[g=1, 7 evaluated, 5 expanded, t=0.00697814s, 4652 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
New best heuristic value for ff(transform = adapt_costs(one)): 7
[g=2, 8 evaluated, 6 expanded, t=0.00702179s, 4652 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 6
[g=10, 872 evaluated, 521 expanded, t=0.0213777s, 4784 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 5
[g=11, 873 evaluated, 522 expanded, t=0.0214261s, 4784 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 5
[g=12, 874 evaluated, 523 expanded, t=0.0214662s, 4784 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 4
New best heuristic value for ff(transform = adapt_costs(one)): 4
[g=19, 881 evaluated, 530 expanded, t=0.0216056s, 4784 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 3
New best heuristic value for ff(transform = adapt_costs(one)): 3
[g=27, 889 evaluated, 538 expanded, t=0.0217566s, 4784 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
New best heuristic value for ff(transform = adapt_costs(one)): 2
[g=35, 897 evaluated, 546 expanded, t=0.0219006s, 4784 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
New best heuristic value for ff(transform = adapt_costs(one)): 1
[g=43, 905 evaluated, 554 expanded, t=0.0220298s, 4784 KB]
Solution found!
Actual search time: 0.0153429s [t=0.0220635s]
program-visit-node-0 row-0 (1001)
check-visit-node-0-0 row-0 (0)
execute-visit-node-0-0 row-0 (1)
program-move-next-1 row-0 (1001)
check-move-next-0-1 row-0 (0)
execute-move-next-0-1 row-0 (1)
program-visit-node-2 row-0 (1001)
check-visit-node-0-2 row-0 (0)
execute-visit-node-0-2 row-0 (1)
program-end-3 row-0 (1)
check-main-end-0-3 row-0 (0)
repeat-end-main-0-3 row-0 (0)
check-visit-node-0-0 row-0 (0)
execute-visit-node-0-0 row-0 (1)
check-move-next-0-1 row-0 (0)
execute-move-next-0-1 row-0 (1)
check-visit-node-0-2 row-0 (0)
execute-visit-node-0-2 row-0 (1)
check-main-end-1-3 row-0 (0)
skip-1  (0)
check-visit-node-0-0 row-0 (0)
execute-visit-node-0-0 row-0 (1)
check-move-next-0-1 row-0 (0)
execute-move-next-0-1 row-0 (1)
check-visit-node-0-2 row-0 (0)
execute-visit-node-0-2 row-0 (1)
check-main-end-2-3 row-0 (0)
skip-2  (0)
check-visit-node-0-0 row-0 (0)
execute-visit-node-0-0 row-0 (1)
check-move-next-0-1 row-0 (0)
execute-move-next-0-1 row-0 (1)
check-visit-node-0-2 row-0 (0)
execute-visit-node-0-2 row-0 (1)
check-main-end-3-3 row-0 (0)
skip-3  (0)
check-visit-node-0-0 row-0 (0)
execute-visit-node-0-0 row-0 (1)
check-move-next-0-1 row-0 (0)
execute-move-next-0-1 row-0 (1)
check-visit-node-0-2 row-0 (0)
execute-visit-node-0-2 row-0 (1)
check-main-end-4-3 row-0 (0)
skip-4  (0)
Plan length: 44 step(s).
Plan cost: 3019
Expanded 555 state(s).
Reopened 0 state(s).
Evaluated 906 state(s).
Evaluations: 1462
Generated 5488 state(s).
Dead ends: 350 state(s).
Number of registered states: 906
Int hash set load factor: 906/1024 = 0.884766
Int hash set resizes: 10
Search time: 0.0153614s
Total time: 0.0220658s
Solution found.
Peak memory: 4784 KB

search exit code: 0
