INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/translate/translate.py domain.pddl ins.pddl --sas-file output.sas
Parsing...
Parsing: [0.050s CPU, 0.040s wall-clock]
Normalizing task... [0.000s CPU, 0.003s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.002s wall-clock]
Normalizing Datalog program...
Unbound effect variables: Adding @object predicate.
Trivial rules: Converted to facts.
Normalizing Datalog program: [0.020s CPU, 0.017s wall-clock]
Preparing model... [0.000s CPU, 0.008s wall-clock]
Generated 799 rules.
Computing model... [0.010s CPU, 0.011s wall-clock]
693 relevant atoms
781 auxiliary atoms
1474 final queue length
2826 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.060s CPU, 0.060s wall-clock]
Computing fact groups...
Finding invariants...
117 initial candidates
Finding invariants: [25.450s CPU, 25.456s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
253 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [25.460s CPU, 25.460s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.040s CPU, 0.035s wall-clock]
1069 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
100 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
215 of 215 variables necessary.
23 of 30 mutex groups necessary.
253 of 253 operators necessary.
10 of 10 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.012s wall-clock]
Translator variables: 215
Translator derived variables: 10
Translator facts: 489
Translator goal facts: 1
Translator mutex groups: 23
Translator total mutex groups size: 82
Translator operators: 253
Translator axioms: 10
Translator task size: 5699
Translator peak memory: 203524 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [25.640s CPU, 25.630s wall-clock]

translate exit code: 0
INFO     Running search (release32).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
reading input... [t=1.8294e-05s]
done reading input! [t=0.00462311s]
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00611246s
Discovered 14 landmarks, of which 0 are disjunctive and 0 are conjunctive 
36 edges
Simplifying 2189 unary operators... done! [1902 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done! [t=0.0139953s]
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 8.6949e-05s
Variables: 215
FactPairs: 489
Bytes per state: 32
Conducting lazy best first search, (real) bound = 2147483647
7 initial landmarks, 1 goal landmarks
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
New best heuristic value for ff(transform = adapt_costs(one)): 11
[g=0, 1 evaluated, 0 expanded, t=0.0141274s, 5040 KB]
Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
Initial heuristic value for ff(transform = adapt_costs(one)): 11
New best heuristic value for ff(transform = adapt_costs(one)): 10
[g=1, 2 evaluated, 1 expanded, t=0.0142328s, 5040 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 8
[g=2, 3 evaluated, 2 expanded, t=0.0143119s, 5040 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 7
[g=3, 4 evaluated, 3 expanded, t=0.0143946s, 5040 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
New best heuristic value for ff(transform = adapt_costs(one)): 6
[g=2, 9 evaluated, 8 expanded, t=0.0146759s, 5040 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 5
[g=46, 13551 evaluated, 13550 expanded, t=0.637461s, 6280 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 4
[g=47, 13552 evaluated, 13551 expanded, t=0.637564s, 6280 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 4
[g=48, 13553 evaluated, 13552 expanded, t=0.637631s, 6280 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 3
New best heuristic value for ff(transform = adapt_costs(one)): 3
[g=71, 13710 evaluated, 13709 expanded, t=0.645235s, 6412 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
New best heuristic value for ff(transform = adapt_costs(one)): 2
[g=85, 13724 evaluated, 13723 expanded, t=0.645903s, 6412 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
New best heuristic value for ff(transform = adapt_costs(one)): 1
[g=103, 13808 evaluated, 13807 expanded, t=0.649176s, 6412 KB]
Solution found!
Actual search time: 0.635164s [t=0.64922s]
program-visit-node-0 row-0 (1001)
check-visit-node-0-0 row-0 (0)
execute-visit-node-0-0 row-0 (1)
program-move-next-1 row-0 (1001)
check-move-next-0-1 row-0 (0)
execute-move-next-0-1 row-0 (1)
program-goto-visited-2-0 n6 row-0 (1001)
eval-cond-visited-0-2 n6 row-0 (1)
do-goto-0-2-0 row-0 (1)
check-visit-node-0-0 row-0 (0)
execute-visit-node-0-0 row-0 (1)
check-move-next-0-1 row-0 (0)
execute-move-next-0-1 row-0 (1)
eval-cond-visited-0-2 n6 row-0 (1)
do-goto-0-2-0 row-0 (1)
check-visit-node-0-0 row-0 (0)
execute-visit-node-0-0 row-0 (1)
check-move-next-0-1 row-0 (0)
execute-move-next-0-1 row-0 (1)
eval-cond-visited-0-2 n6 row-0 (1)
do-goto-0-2-0 row-0 (1)
check-visit-node-0-0 row-0 (0)
execute-visit-node-0-0 row-0 (1)
check-move-next-0-1 row-0 (0)
execute-move-next-0-1 row-0 (1)
eval-cond-visited-0-2 n6 row-0 (1)
do-goto-0-2-0 row-0 (1)
check-visit-node-0-0 row-0 (0)
execute-visit-node-0-0 row-0 (1)
check-move-next-0-1 row-0 (0)
execute-move-next-0-1 row-0 (1)
eval-cond-visited-0-2 n6 row-0 (1)
do-goto-0-2-0 row-0 (1)
check-visit-node-0-0 row-0 (0)
execute-visit-node-0-0 row-0 (1)
check-move-next-0-1 row-0 (0)
execute-move-next-0-1 row-0 (1)
eval-cond-visited-0-2 n6 row-0 (1)
do-goto-0-2-0 row-0 (1)
check-visit-node-0-0 row-0 (0)
execute-visit-node-0-0 row-0 (1)
check-move-next-0-1 row-0 (0)
execute-move-next-0-1 row-0 (1)
eval-cond-visited-0-2 n6 row-0 (1)
dont-goto-0-2-0 row-0 (1)
program-end-3 row-0 (1)
check-main-end-0-3 row-0 (0)
repeat-end-main-0-3 row-0 (0)
check-visit-node-0-0 row-0 (0)
execute-visit-node-0-0 row-0 (1)
check-move-next-0-1 row-0 (0)
execute-move-next-0-1 row-0 (1)
eval-cond-visited-0-2 n6 row-0 (1)
do-goto-0-2-0 row-0 (1)
check-visit-node-0-0 row-0 (0)
execute-visit-node-0-0 row-0 (1)
check-move-next-0-1 row-0 (0)
execute-move-next-0-1 row-0 (1)
eval-cond-visited-0-2 n6 row-0 (1)
do-goto-0-2-0 row-0 (1)
check-visit-node-0-0 row-0 (0)
execute-visit-node-0-0 row-0 (1)
store  (0)
check-move-next-0-1 row-0 (0)
execute-move-next-0-1 row-0 (1)
eval-cond-visited-0-2 n6 row-0 (1)
do-goto-0-2-0 row-0 (1)
check-visit-node-0-0 row-0 (0)
execute-visit-node-0-0 row-0 (1)
compare  (0)
process  (0)
skip-1  (0)
check-visit-node-0-0 row-0 (0)
execute-visit-node-0-0 row-0 (1)
check-move-next-0-1 row-0 (0)
execute-move-next-0-1 row-0 (1)
eval-cond-visited-0-2 n6 row-0 (1)
do-goto-0-2-0 row-0 (1)
check-visit-node-0-0 row-0 (0)
execute-visit-node-0-0 row-0 (1)
check-move-next-0-1 row-0 (0)
execute-move-next-0-1 row-0 (1)
eval-cond-visited-0-2 n6 row-0 (1)
dont-goto-0-2-0 row-0 (1)
check-main-end-2-3 row-0 (0)
skip-2  (0)
check-visit-node-0-0 row-0 (0)
execute-visit-node-0-0 row-0 (1)
check-move-next-0-1 row-0 (0)
execute-move-next-0-1 row-0 (1)
eval-cond-visited-0-2 n6 row-0 (1)
do-goto-0-2-0 row-0 (1)
check-visit-node-0-0 row-0 (0)
execute-visit-node-0-0 row-0 (1)
store  (0)
check-move-next-0-1 row-0 (0)
execute-move-next-0-1 row-0 (1)
eval-cond-visited-0-2 n6 row-0 (1)
do-goto-0-2-0 row-0 (1)
check-visit-node-0-0 row-0 (0)
execute-visit-node-0-0 row-0 (1)
compare  (0)
process  (0)
skip-3  (0)
Plan length: 104 step(s).
Plan cost: 3062
Expanded 13808 state(s).
Reopened 0 state(s).
Evaluated 13809 state(s).
Evaluations: 27618
Generated 42603 state(s).
Dead ends: 0 state(s).
Number of registered states: 13809
Int hash set load factor: 13809/16384 = 0.842834
Int hash set resizes: 14
Search time: 0.635175s
Total time: 0.649223s
Solution found.
Peak memory: 6412 KB

search exit code: 0
