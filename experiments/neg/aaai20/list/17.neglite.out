INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/translate/translate.py domain.pddl ins.pddl --sas-file output.sas
Parsing...
Parsing: [0.030s CPU, 0.028s wall-clock]
Normalizing task... [0.000s CPU, 0.002s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.002s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.020s CPU, 0.016s wall-clock]
Preparing model... [0.010s CPU, 0.007s wall-clock]
Generated 718 rules.
Computing model... [0.000s CPU, 0.007s wall-clock]
324 relevant atoms
522 auxiliary atoms
846 final queue length
1541 total queue pushes
Completing instantiation... [0.000s CPU, 0.008s wall-clock]
Instantiating: [0.040s CPU, 0.042s wall-clock]
Computing fact groups...
Finding invariants...
75 initial candidates
Finding invariants: [0.260s CPU, 0.260s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
55 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.260s CPU, 0.262s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.015s wall-clock]
203 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
6 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.006s wall-clock]
Reordering and filtering variables...
62 of 64 variables necessary.
23 of 30 mutex groups necessary.
196 of 196 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.004s wall-clock]
Translator variables: 62
Translator derived variables: 0
Translator facts: 165
Translator goal facts: 1
Translator mutex groups: 23
Translator total mutex groups size: 70
Translator operators: 196
Translator axioms: 0
Translator task size: 2067
Translator peak memory: 46100 KB
Writing output... [0.000s CPU, 0.002s wall-clock]
Done! [0.360s CPU, 0.361s wall-clock]

translate exit code: 0
INFO     Running search (release32).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
reading input... [t=2.091e-05s]
done reading input! [t=0.00191415s]
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.0014461s
Discovered 12 landmarks, of which 0 are disjunctive and 0 are conjunctive 
31 edges
Simplifying 756 unary operators... done! [547 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done! [t=0.00521179s]
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 6.8939e-05s
Variables: 62
FactPairs: 165
Bytes per state: 12
Conducting lazy best first search, (real) bound = 2147483647
5 initial landmarks, 1 goal landmarks
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
New best heuristic value for ff(transform = adapt_costs(one)): 11
[g=0, 1 evaluated, 0 expanded, t=0.00530297s, 4648 KB]
Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
Initial heuristic value for ff(transform = adapt_costs(one)): 11
New best heuristic value for ff(transform = adapt_costs(one)): 9
[g=1, 2 evaluated, 1 expanded, t=0.00536555s, 4648 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 8
[g=2, 3 evaluated, 2 expanded, t=0.00540411s, 4648 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 7
[g=1, 7 evaluated, 5 expanded, t=0.00549079s, 4648 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
New best heuristic value for ff(transform = adapt_costs(one)): 6
[g=2, 8 evaluated, 6 expanded, t=0.00552784s, 4648 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 5
[g=10, 692 evaluated, 449 expanded, t=0.0149427s, 4648 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 4
[g=11, 693 evaluated, 450 expanded, t=0.014987s, 4648 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 4
[g=12, 694 evaluated, 451 expanded, t=0.0150242s, 4648 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 3
New best heuristic value for ff(transform = adapt_costs(one)): 3
[g=19, 701 evaluated, 458 expanded, t=0.0151736s, 4648 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
New best heuristic value for ff(transform = adapt_costs(one)): 2
[g=27, 709 evaluated, 466 expanded, t=0.0152947s, 4648 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
New best heuristic value for ff(transform = adapt_costs(one)): 1
[g=35, 717 evaluated, 474 expanded, t=0.0154041s, 4648 KB]
Solution found!
Actual search time: 0.0101648s [t=0.0154361s]
program-visit-node-0 row-0 (1001)
check-visit-node-0-0 row-0 (0)
execute-visit-node-0-0 row-0 (1)
program-move-next-1 row-0 (1001)
check-move-next-0-1 row-0 (0)
execute-move-next-0-1 row-0 (1)
program-visit-node-2 row-0 (1001)
check-visit-node-0-2 row-0 (0)
execute-visit-node-0-2 row-0 (1)
program-end-3 row-0 (1)
check-main-end-0-3 row-0 (0)
repeat-end-main-0-3 row-0 (0)
check-visit-node-0-0 row-0 (0)
execute-visit-node-0-0 row-0 (1)
check-move-next-0-1 row-0 (0)
execute-move-next-0-1 row-0 (1)
check-visit-node-0-2 row-0 (0)
execute-visit-node-0-2 row-0 (1)
check-main-end-1-3 row-0 (0)
skip-1  (0)
check-visit-node-0-0 row-0 (0)
execute-visit-node-0-0 row-0 (1)
check-move-next-0-1 row-0 (0)
execute-move-next-0-1 row-0 (1)
check-visit-node-0-2 row-0 (0)
execute-visit-node-0-2 row-0 (1)
check-main-end-2-3 row-0 (0)
skip-2  (0)
check-visit-node-0-0 row-0 (0)
execute-visit-node-0-0 row-0 (1)
check-move-next-0-1 row-0 (0)
execute-move-next-0-1 row-0 (1)
check-visit-node-0-2 row-0 (0)
execute-visit-node-0-2 row-0 (1)
check-main-end-3-3 row-0 (0)
skip-3  (0)
Plan length: 36 step(s).
Plan cost: 3016
Expanded 475 state(s).
Reopened 0 state(s).
Evaluated 718 state(s).
Evaluations: 1194
Generated 3187 state(s).
Dead ends: 242 state(s).
Number of registered states: 718
Int hash set load factor: 718/1024 = 0.701172
Int hash set resizes: 10
Search time: 0.010183s
Total time: 0.0154385s
Solution found.
Peak memory: 4648 KB

search exit code: 0
