INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/translate/translate.py domain.pddl ins.pddl --sas-file output.sas
Parsing...
Parsing: [0.090s CPU, 0.090s wall-clock]
Normalizing task... [0.010s CPU, 0.006s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.005s wall-clock]
Normalizing Datalog program...
Unbound effect variables: Adding @object predicate.
Trivial rules: Converted to facts.
Normalizing Datalog program: [0.040s CPU, 0.041s wall-clock]
Preparing model... [0.030s CPU, 0.028s wall-clock]
Generated 1951 rules.
Computing model... [0.020s CPU, 0.022s wall-clock]
1160 relevant atoms
1710 auxiliary atoms
2870 final queue length
4694 total queue pushes
Completing instantiation... [0.050s CPU, 0.045s wall-clock]
Instantiating: [0.140s CPU, 0.143s wall-clock]
Computing fact groups...
Finding invariants...
189 initial candidates
Finding invariants: [22.070s CPU, 22.067s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
505 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.002s wall-clock]
Computing fact groups: [22.080s CPU, 22.075s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.004s wall-clock]
Translating task: [0.060s CPU, 0.060s wall-clock]
1368 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
547 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.021s wall-clock]
Reordering and filtering variables...
246 of 246 variables necessary.
47 of 55 mutex groups necessary.
524 of 524 operators necessary.
14 of 14 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.016s wall-clock]
Translator variables: 246
Translator derived variables: 14
Translator facts: 519
Translator goal facts: 1
Translator mutex groups: 47
Translator total mutex groups size: 102
Translator operators: 524
Translator axioms: 14
Translator task size: 9012
Translator peak memory: 207120 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [22.430s CPU, 22.425s wall-clock]

translate exit code: 0
INFO     Running search (release32).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/jsegovia/Desktop/automated-programming-framework-private/PLANNERS/fast-downward/builds/release32/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
reading input... [t=2.1567e-05s]
done reading input! [t=0.00715325s]
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00782514s
Discovered 16 landmarks, of which 0 are disjunctive and 0 are conjunctive 
43 edges
Simplifying 3427 unary operators... done! [2668 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done! [t=0.0189668s]
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000159057s
Variables: 246
FactPairs: 519
Bytes per state: 36
Conducting lazy best first search, (real) bound = 2147483647
8 initial landmarks, 1 goal landmarks
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
New best heuristic value for ff(transform = adapt_costs(one)): 12
[g=0, 1 evaluated, 0 expanded, t=0.0191082s, 5312 KB]
Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
Initial heuristic value for ff(transform = adapt_costs(one)): 12
New best heuristic value for ff(transform = adapt_costs(one)): 8
[g=1, 2 evaluated, 1 expanded, t=0.0192349s, 5312 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
New best heuristic value for ff(transform = adapt_costs(one)): 7
[g=2, 3 evaluated, 2 expanded, t=0.0193273s, 5312 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 6
[g=13, 43512 evaluated, 43511 expanded, t=2.39509s, 14132 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 5
[g=14, 43513 evaluated, 43512 expanded, t=2.39519s, 14132 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
[g=16, 43515 evaluated, 43514 expanded, t=2.39533s, 14132 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 4
[g=56, 990818 evaluated, 990817 expanded, t=50.648s, 161096 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 4
[g=57, 990819 evaluated, 990818 expanded, t=50.6481s, 161096 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 3
New best heuristic value for ff(transform = adapt_costs(one)): 3
[g=66, 990828 evaluated, 990827 expanded, t=50.6486s, 161096 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
New best heuristic value for ff(transform = adapt_costs(one)): 2
[g=130, 994678 evaluated, 994677 expanded, t=50.8613s, 161496 KB]
