( DEFINE ( DOMAIN TREES )
( :REQUIREMENTS :ACTION-COSTS :CONDITIONAL-EFFECTS :TYPING )
( :TYPES
	VARIABLE - OBJECT
	NODE - OBJECT
	STACKROW - OBJECT
)
( :CONSTANTS
	CURRENT CHILD - VARIABLE
	N1 N2 N3 N4 N5 - NODE
	ROW0 ROW1 ROW2 - STACKROW
)
( :PREDICATES
	( ASSIGNNODE ?VARIABLE0 - VARIABLE ?NODE1 - NODE ?STACKROW2 - STACKROW )
	( LEFT-CHILD ?NODE0 - NODE ?NODE1 - NODE )
	( RIGHT-CHILD ?NODE0 - NODE ?NODE1 - NODE )
	( VISITED ?NODE0 - NODE )
	( LEAF ?NODE0 - NODE )
	( EMPTY-STACK )
	( NEXT-STACK-ROW ?STACKROW0 - STACKROW ?STACKROW1 - STACKROW )
	( TOP-STACK ?STACKROW0 - STACKROW )
	( STACK-MAIN ?STACKROW0 - STACKROW )
	( STACK-LINE-0 ?STACKROW0 - STACKROW )
	( STACK-LINE-1 ?STACKROW0 - STACKROW )
	( STACK-LINE-2 ?STACKROW0 - STACKROW )
	( STACK-LINE-3 ?STACKROW0 - STACKROW )
	( TEST-0 )
	( CALL-LEFT-0-0-0 )
	( CALL-LEFT-0-0-1 )
	( CALL-LEFT-0-0-2 )
	( CALL-RIGHT-0-0-0 )
	( CALL-RIGHT-0-0-1 )
	( CALL-RIGHT-0-0-2 )
	( EMPTY-0 )
	( EMPTY-1 )
	( EMPTY-2 )
	( EMPTY-3 )
	( INS-END-1 )
	( INS-END-2 )
	( INS-END-3 )
	( ACCUMULATOR )
	( DONE-EVALUATING )
	( DONE-PROGRAMMING )
	( COND-ISLEAF-0-0 )
	( JMP-0-0-2 )
	( JMP-0-0-3 )
	( COND-ISLEAF-0-1 )
	( JMP-0-1-0 )
	( JMP-0-1-3 )
	( COND-ISLEAF-0-2 )
	( JMP-0-2-0 )
	( JMP-0-2-1 )
)
( :FUNCTIONS
	( TOTAL-COST )
)
( :ACTION PROGRAM-JMP-ISLEAF-0-2
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( EMPTY-0 )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-0 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( EMPTY-0 ) )
		( COND-ISLEAF-0-0 )
		( JMP-0-0-2 )
		( INCREASE ( TOTAL-COST ) 1001 )
	)
)
( :ACTION PROGRAM-JMP-ISLEAF-0-3
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( EMPTY-0 )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-0 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( EMPTY-0 ) )
		( COND-ISLEAF-0-0 )
		( JMP-0-0-3 )
		( INCREASE ( TOTAL-COST ) 1001 )
	)
)
( :ACTION PROGRAM-JMP-ISLEAF-1-0
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( EMPTY-1 )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-1 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( EMPTY-1 ) )
		( COND-ISLEAF-0-1 )
		( JMP-0-1-0 )
		( INCREASE ( TOTAL-COST ) 1001 )
	)
)
( :ACTION PROGRAM-JMP-ISLEAF-1-3
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( EMPTY-1 )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-1 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( EMPTY-1 ) )
		( COND-ISLEAF-0-1 )
		( JMP-0-1-3 )
		( INCREASE ( TOTAL-COST ) 1001 )
	)
)
( :ACTION PROGRAM-JMP-ISLEAF-2-0
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( EMPTY-2 )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-2 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( EMPTY-2 ) )
		( COND-ISLEAF-0-2 )
		( JMP-0-2-0 )
		( INCREASE ( TOTAL-COST ) 1001 )
	)
)
( :ACTION PROGRAM-JMP-ISLEAF-2-1
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( EMPTY-2 )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-2 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( EMPTY-2 ) )
		( COND-ISLEAF-0-2 )
		( JMP-0-2-1 )
		( INCREASE ( TOTAL-COST ) 1001 )
	)
)
( :ACTION DO-JMP-0-0-2
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( JMP-0-0-2 )
		( DONE-EVALUATING )
		( ACCUMULATOR )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-0 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( DONE-EVALUATING ) )
		( NOT ( ACCUMULATOR ) )
		( NOT ( STACK-LINE-0 ?STACKROW0 ) )
		( STACK-LINE-2 ?STACKROW0 )
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION DO-JMP-0-0-3
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( JMP-0-0-3 )
		( DONE-EVALUATING )
		( ACCUMULATOR )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-0 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( DONE-EVALUATING ) )
		( NOT ( ACCUMULATOR ) )
		( NOT ( STACK-LINE-0 ?STACKROW0 ) )
		( STACK-LINE-3 ?STACKROW0 )
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION DO-JMP-0-1-0
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( JMP-0-1-0 )
		( DONE-EVALUATING )
		( ACCUMULATOR )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-1 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( DONE-EVALUATING ) )
		( NOT ( ACCUMULATOR ) )
		( NOT ( STACK-LINE-1 ?STACKROW0 ) )
		( STACK-LINE-0 ?STACKROW0 )
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION DO-JMP-0-1-3
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( JMP-0-1-3 )
		( DONE-EVALUATING )
		( ACCUMULATOR )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-1 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( DONE-EVALUATING ) )
		( NOT ( ACCUMULATOR ) )
		( NOT ( STACK-LINE-1 ?STACKROW0 ) )
		( STACK-LINE-3 ?STACKROW0 )
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION DO-JMP-0-2-0
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( JMP-0-2-0 )
		( DONE-EVALUATING )
		( ACCUMULATOR )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-2 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( DONE-EVALUATING ) )
		( NOT ( ACCUMULATOR ) )
		( NOT ( STACK-LINE-2 ?STACKROW0 ) )
		( STACK-LINE-0 ?STACKROW0 )
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION DO-JMP-0-2-1
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( JMP-0-2-1 )
		( DONE-EVALUATING )
		( ACCUMULATOR )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-2 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( DONE-EVALUATING ) )
		( NOT ( ACCUMULATOR ) )
		( NOT ( STACK-LINE-2 ?STACKROW0 ) )
		( STACK-LINE-1 ?STACKROW0 )
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION EVAL-COND-ISLEAF-0-0
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( COND-ISLEAF-0-0 )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-0 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( DONE-EVALUATING )
		( FORALL
			( ?NODE1 - NODE )
			( WHEN
				( AND
					( ASSIGNNODE CURRENT ?NODE1 ?STACKROW0 )
					( LEAF ?NODE1 )
				)
				( AND
					( ACCUMULATOR )
				)
			)
		)
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION EVAL-COND-ISLEAF-0-1
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( COND-ISLEAF-0-1 )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-1 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( DONE-EVALUATING )
		( FORALL
			( ?NODE1 - NODE )
			( WHEN
				( AND
					( ASSIGNNODE CURRENT ?NODE1 ?STACKROW0 )
					( LEAF ?NODE1 )
				)
				( AND
					( ACCUMULATOR )
				)
			)
		)
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION EVAL-COND-ISLEAF-0-2
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( COND-ISLEAF-0-2 )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-2 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( DONE-EVALUATING )
		( FORALL
			( ?NODE1 - NODE )
			( WHEN
				( AND
					( ASSIGNNODE CURRENT ?NODE1 ?STACKROW0 )
					( LEAF ?NODE1 )
				)
				( AND
					( ACCUMULATOR )
				)
			)
		)
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION DO-NOJMP-0-0-2
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( JMP-0-0-2 )
		( DONE-EVALUATING )
		( NOT ( ACCUMULATOR ) )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-0 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( DONE-EVALUATING ) )
		( NOT ( STACK-LINE-0 ?STACKROW0 ) )
		( STACK-LINE-1 ?STACKROW0 )
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION DO-NOJMP-0-0-3
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( JMP-0-0-3 )
		( DONE-EVALUATING )
		( NOT ( ACCUMULATOR ) )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-0 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( DONE-EVALUATING ) )
		( NOT ( STACK-LINE-0 ?STACKROW0 ) )
		( STACK-LINE-1 ?STACKROW0 )
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION DO-NOJMP-0-1-0
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( JMP-0-1-0 )
		( DONE-EVALUATING )
		( NOT ( ACCUMULATOR ) )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-1 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( DONE-EVALUATING ) )
		( NOT ( STACK-LINE-1 ?STACKROW0 ) )
		( STACK-LINE-2 ?STACKROW0 )
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION DO-NOJMP-0-1-3
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( JMP-0-1-3 )
		( DONE-EVALUATING )
		( NOT ( ACCUMULATOR ) )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-1 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( DONE-EVALUATING ) )
		( NOT ( STACK-LINE-1 ?STACKROW0 ) )
		( STACK-LINE-2 ?STACKROW0 )
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION DO-NOJMP-0-2-0
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( JMP-0-2-0 )
		( DONE-EVALUATING )
		( NOT ( ACCUMULATOR ) )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-2 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( DONE-EVALUATING ) )
		( NOT ( STACK-LINE-2 ?STACKROW0 ) )
		( STACK-LINE-3 ?STACKROW0 )
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION DO-NOJMP-0-2-1
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( JMP-0-2-1 )
		( DONE-EVALUATING )
		( NOT ( ACCUMULATOR ) )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-2 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( DONE-EVALUATING ) )
		( NOT ( STACK-LINE-2 ?STACKROW0 ) )
		( STACK-LINE-3 ?STACKROW0 )
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION PROGRAM-END-1
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( EMPTY-1 )
		( TEST-0 )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-1 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( EMPTY-1 ) )
		( INS-END-1 )
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION PROGRAM-END-2
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( EMPTY-2 )
		( TEST-0 )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-2 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( EMPTY-2 ) )
		( INS-END-2 )
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION PROGRAM-END-3
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( EMPTY-3 )
		( TEST-0 )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-3 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( EMPTY-3 ) )
		( INS-END-3 )
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION REPEAT-END-MAIN-1-0
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( INS-END-1 )
		( TEST-0 )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-1 ?STACKROW0 )
		( TOP-STACK ROW0 )
		( VISITED N1 )
		( VISITED N2 )
		( VISITED N3 )
		( VISITED N4 )
		( VISITED N5 )
	)
  :EFFECT
	( AND
		( DONE-PROGRAMMING )
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION REPEAT-END-MAIN-2-0
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( INS-END-2 )
		( TEST-0 )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-2 ?STACKROW0 )
		( TOP-STACK ROW0 )
		( VISITED N1 )
		( VISITED N2 )
		( VISITED N3 )
		( VISITED N4 )
		( VISITED N5 )
	)
  :EFFECT
	( AND
		( DONE-PROGRAMMING )
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION REPEAT-END-MAIN-3-0
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( INS-END-3 )
		( TEST-0 )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-3 ?STACKROW0 )
		( TOP-STACK ROW0 )
		( VISITED N1 )
		( VISITED N2 )
		( VISITED N3 )
		( VISITED N4 )
		( VISITED N5 )
	)
  :EFFECT
	( AND
		( DONE-PROGRAMMING )
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION REPEAT-END-0-1-0
  :PARAMETERS ( ?STACKROW0 - STACKROW ?STACKROW1 - STACKROW )
  :PRECONDITION
	( AND
		( INS-END-1 )
		( TEST-0 )
		( NEXT-STACK-ROW ?STACKROW0 ?STACKROW1 )
		( TOP-STACK ?STACKROW1 )
		( STACK-MAIN ?STACKROW1 )
		( STACK-LINE-1 ?STACKROW1 )
	)
  :EFFECT
	( AND
		( NOT ( TOP-STACK ?STACKROW1 ) )
		( TOP-STACK ?STACKROW0 )
		( NOT ( STACK-MAIN ?STACKROW1 ) )
		( NOT ( STACK-LINE-1 ?STACKROW1 ) )
		( FORALL (?NODE2 - NODE)
			(AND (NOT (ASSIGNNODE CURRENT ?NODE2 ?STACKROW1)) (NOT (ASSIGNNODE CHILD ?NODE2 ?STACKROW1)))
		)
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION REPEAT-END-0-2-0
  :PARAMETERS ( ?STACKROW0 - STACKROW ?STACKROW1 - STACKROW )
  :PRECONDITION
	( AND
		( INS-END-2 )
		( TEST-0 )
		( NEXT-STACK-ROW ?STACKROW0 ?STACKROW1 )
		( TOP-STACK ?STACKROW1 )
		( STACK-MAIN ?STACKROW1 )
		( STACK-LINE-2 ?STACKROW1 )
	)
  :EFFECT
	( AND
		( NOT ( TOP-STACK ?STACKROW1 ) )
		( TOP-STACK ?STACKROW0 )
		( NOT ( STACK-MAIN ?STACKROW1 ) )
		( NOT ( STACK-LINE-2 ?STACKROW1 ) )
		( FORALL (?NODE2 - NODE)
			(AND (NOT (ASSIGNNODE CURRENT ?NODE2 ?STACKROW1)) (NOT (ASSIGNNODE CHILD ?NODE2 ?STACKROW1)))
		)
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION REPEAT-END-0-3-0
  :PARAMETERS ( ?STACKROW0 - STACKROW ?STACKROW1 - STACKROW )
  :PRECONDITION
	( AND
		( INS-END-3 )
		( TEST-0 )
		( NEXT-STACK-ROW ?STACKROW0 ?STACKROW1 )
		( TOP-STACK ?STACKROW1 )
		( STACK-MAIN ?STACKROW1 )
		( STACK-LINE-3 ?STACKROW1 )
	)
  :EFFECT
	( AND
		( NOT ( TOP-STACK ?STACKROW1 ) )
		( TOP-STACK ?STACKROW0 )
		( NOT ( STACK-MAIN ?STACKROW1 ) )
		( NOT ( STACK-LINE-3 ?STACKROW1 ) )
		( FORALL (?NODE2 - NODE)
			(AND (NOT (ASSIGNNODE CURRENT ?NODE2 ?STACKROW1)) (NOT (ASSIGNNODE CHILD ?NODE2 ?STACKROW1)))
		)
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION PROGRAM-CALL-LEFT-0-0-0
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( EMPTY-0 )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-0 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( EMPTY-0 ) )
		( CALL-LEFT-0-0-0 )
		( INCREASE ( TOTAL-COST ) 1001 )
	)
)
( :ACTION PROGRAM-CALL-LEFT-0-0-1
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( EMPTY-1 )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-1 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( EMPTY-1 ) )
		( CALL-LEFT-0-0-1 )
		( INCREASE ( TOTAL-COST ) 1001 )
	)
)
( :ACTION PROGRAM-CALL-LEFT-0-0-2
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( EMPTY-2 )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-2 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( EMPTY-2 ) )
		( CALL-LEFT-0-0-2 )
		( INCREASE ( TOTAL-COST ) 1001 )
	)
)
( :ACTION PROGRAM-CALL-RIGHT-0-0-0
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( EMPTY-0 )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-0 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( EMPTY-0 ) )
		( CALL-RIGHT-0-0-0 )
		( INCREASE ( TOTAL-COST ) 1001 )
	)
)
( :ACTION PROGRAM-CALL-RIGHT-0-0-1
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( EMPTY-1 )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-1 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( EMPTY-1 ) )
		( CALL-RIGHT-0-0-1 )
		( INCREASE ( TOTAL-COST ) 1001 )
	)
)
( :ACTION PROGRAM-CALL-RIGHT-0-0-2
  :PARAMETERS ( ?STACKROW0 - STACKROW )
  :PRECONDITION
	( AND
		( EMPTY-2 )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-2 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( EMPTY-2 ) )
		( CALL-RIGHT-0-0-2 )
		( INCREASE ( TOTAL-COST ) 1001 )
	)
)
( :ACTION REPEAT-CALL-LEFT-0-0-0
  :PARAMETERS ( ?STACKROW0 - STACKROW ?STACKROW1 - STACKROW )
  :PRECONDITION
	( AND
		( CALL-LEFT-0-0-0 )
		( NEXT-STACK-ROW ?STACKROW0 ?STACKROW1 )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-0 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( TOP-STACK ?STACKROW0 ) )
		( TOP-STACK ?STACKROW1 )
		( STACK-MAIN ?STACKROW1 )
		( STACK-LINE-0 ?STACKROW1 )
		( NOT ( STACK-LINE-0 ?STACKROW0 ) )
		( STACK-LINE-1 ?STACKROW0 )
		( FORALL (?CHILD ?PARENT - NODE)
			(WHEN
				(AND (ASSIGNNODE CURRENT ?PARENT ?STACKROW0) (LEFT-CHILD ?CHILD ?PARENT))
				(AND (ASSIGNNODE CURRENT ?CHILD ?STACKROW1) (VISITED ?CHILD))
			)
		)
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION REPEAT-CALL-LEFT-0-0-1
  :PARAMETERS ( ?STACKROW0 - STACKROW ?STACKROW1 - STACKROW )
  :PRECONDITION
	( AND
		( CALL-LEFT-0-0-1 )
		( NEXT-STACK-ROW ?STACKROW0 ?STACKROW1 )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-1 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( TOP-STACK ?STACKROW0 ) )
		( TOP-STACK ?STACKROW1 )
		( STACK-MAIN ?STACKROW1 )
		( STACK-LINE-0 ?STACKROW1 )
		( NOT ( STACK-LINE-1 ?STACKROW0 ) )
		( STACK-LINE-2 ?STACKROW0 )
		( FORALL (?CHILD ?PARENT - NODE)
			(WHEN
				(AND (ASSIGNNODE CURRENT ?PARENT ?STACKROW0) (LEFT-CHILD ?CHILD ?PARENT))
				(AND (ASSIGNNODE CURRENT ?CHILD ?STACKROW1) (VISITED ?CHILD))
			)
		)
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION REPEAT-CALL-LEFT-0-0-2
  :PARAMETERS ( ?STACKROW0 - STACKROW ?STACKROW1 - STACKROW )
  :PRECONDITION
	( AND
		( CALL-LEFT-0-0-2 )
		( NEXT-STACK-ROW ?STACKROW0 ?STACKROW1 )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-2 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( TOP-STACK ?STACKROW0 ) )
		( TOP-STACK ?STACKROW1 )
		( STACK-MAIN ?STACKROW1 )
		( STACK-LINE-0 ?STACKROW1 )
		( NOT ( STACK-LINE-2 ?STACKROW0 ) )
		( STACK-LINE-3 ?STACKROW0 )
		( FORALL (?CHILD ?PARENT - NODE)
			(WHEN
				(AND (ASSIGNNODE CURRENT ?PARENT ?STACKROW0) (LEFT-CHILD ?CHILD ?PARENT))
				(AND (ASSIGNNODE CURRENT ?CHILD ?STACKROW1) (VISITED ?CHILD))
			)
		)
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION REPEAT-CALL-RIGHT-0-0-0
  :PARAMETERS ( ?STACKROW0 - STACKROW ?STACKROW1 - STACKROW )
  :PRECONDITION
	( AND
		( CALL-RIGHT-0-0-0 )
		( NEXT-STACK-ROW ?STACKROW0 ?STACKROW1 )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-0 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( TOP-STACK ?STACKROW0 ) )
		( TOP-STACK ?STACKROW1 )
		( STACK-MAIN ?STACKROW1 )
		( STACK-LINE-0 ?STACKROW1 )
		( NOT ( STACK-LINE-0 ?STACKROW0 ) )
		( STACK-LINE-1 ?STACKROW0 )
		( FORALL (?CHILD ?PARENT - NODE)
			(WHEN
				(AND (ASSIGNNODE CURRENT ?PARENT ?STACKROW0) (RIGHT-CHILD ?CHILD ?PARENT))
				(AND (ASSIGNNODE CURRENT ?CHILD ?STACKROW1) (VISITED ?CHILD))
			)
		)
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION REPEAT-CALL-RIGHT-0-0-1
  :PARAMETERS ( ?STACKROW0 - STACKROW ?STACKROW1 - STACKROW )
  :PRECONDITION
	( AND
		( CALL-RIGHT-0-0-1 )
		( NEXT-STACK-ROW ?STACKROW0 ?STACKROW1 )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-1 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( TOP-STACK ?STACKROW0 ) )
		( TOP-STACK ?STACKROW1 )
		( STACK-MAIN ?STACKROW1 )
		( STACK-LINE-0 ?STACKROW1 )
		( NOT ( STACK-LINE-1 ?STACKROW0 ) )
		( STACK-LINE-2 ?STACKROW0 )
		( FORALL (?CHILD ?PARENT - NODE)
			(WHEN
				(AND (ASSIGNNODE CURRENT ?PARENT ?STACKROW0) (RIGHT-CHILD ?CHILD ?PARENT))
				(AND (ASSIGNNODE CURRENT ?CHILD ?STACKROW1) (VISITED ?CHILD))
			)
		)
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
( :ACTION REPEAT-CALL-RIGHT-0-0-2
  :PARAMETERS ( ?STACKROW0 - STACKROW ?STACKROW1 - STACKROW )
  :PRECONDITION
	( AND
		( CALL-RIGHT-0-0-2 )
		( NEXT-STACK-ROW ?STACKROW0 ?STACKROW1 )
		( TOP-STACK ?STACKROW0 )
		( STACK-MAIN ?STACKROW0 )
		( STACK-LINE-2 ?STACKROW0 )
	)
  :EFFECT
	( AND
		( NOT ( TOP-STACK ?STACKROW0 ) )
		( TOP-STACK ?STACKROW1 )
		( STACK-MAIN ?STACKROW1 )
		( STACK-LINE-0 ?STACKROW1 )
		( NOT ( STACK-LINE-2 ?STACKROW0 ) )
		( STACK-LINE-3 ?STACKROW0 )
		( FORALL (?CHILD ?PARENT - NODE)
			(WHEN
				(AND (ASSIGNNODE CURRENT ?PARENT ?STACKROW0) (RIGHT-CHILD ?CHILD ?PARENT))
				(AND (ASSIGNNODE CURRENT ?CHILD ?STACKROW1) (VISITED ?CHILD))
			)
		)
		( INCREASE ( TOTAL-COST ) 1 )
	)
)
)
