(define (problem trees20)
	(:domain programming)
	(:objects
		left-child right-child visited - relation
		current child - variable
		n1 n2 n3 n4 n5 n6 n7 n8 n9 n10 n11 n12 n13 n14 n15 n16 n17 n18 n19 n20 - value
	)
	(:init
		(assignment current n1)
		(copyable-2ary left-child)
		(copyable-2ary right-child)
		(achievable-1ary visited child)
		(achievable-1ary visited current)
		(includes-2ary left-child n1 n2)
		(includes-2ary right-child n1 n3)
		(includes-2ary left-child n3 n4)
		(includes-2ary right-child n3 n5)
		(includes-2ary left-child n4 n6)
		(includes-2ary right-child n4 n7)
		(includes-2ary right-child n7 n8)
		(includes-2ary right-child n8 n9)
		(includes-2ary right-child n9 n10)
		(includes-2ary left-child n6 n11)
		(includes-2ary left-child n10 n12)
		(includes-2ary right-child n10 n13)
		(includes-2ary left-child n11 n14)
		(includes-2ary right-child n11 n15)
		(includes-2ary left-child n12 n16)
		(includes-2ary right-child n12 n17)
		(includes-2ary left-child n13 n18)
		(includes-2ary right-child n13 n19)
		(includes-2ary right-child n14 n20)		
		(conditional-1ary visited)
	)
	(:goal (and
		(includes-1ary visited n1)
		(includes-1ary visited n2)
		(includes-1ary visited n3)
		(includes-1ary visited n4)
		(includes-1ary visited n5)
		(includes-1ary visited n6)
		(includes-1ary visited n7)
		(includes-1ary visited n8)
		(includes-1ary visited n9)
		(includes-1ary visited n10)
		(includes-1ary visited n11)
		(includes-1ary visited n12)
		(includes-1ary visited n13)
		(includes-1ary visited n14)
		(includes-1ary visited n15)
		(includes-1ary visited n16)
		(includes-1ary visited n17)
		(includes-1ary visited n18)
		(includes-1ary visited n19)
		(includes-1ary visited n20)
	))
)
